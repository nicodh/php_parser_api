<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a2" title="">
  <file path="Service/Printer.php" hash="f3a78543bbada001090d8c73d647503f" package="PhpParserApi">
    <docblock line="27">
      <description><![CDATA[provides methods to render the sourcecode for statements]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="27" name="package" description="PhpParserApi"/>
      <tag line="27" name="author" description="Nico de Haen"/>
    </docblock>
    <parse_markers>
      <error line="35" code="50012">No short description for method render()</error>
      <error line="45" code="50010">No DocBlock was found for method renderClassObject()</error>
      <error line="50" code="50010">No DocBlock was found for method renderFileObject()</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="32" package="PhpParserApi">
      <name>Tx_PhpParser_Service_Printer</name>
      <full_name>\Tx_PhpParser_Service_Printer</full_name>
      <extends>\PHPParser_PrettyPrinter_TYPO3CGL</extends>
      <docblock line="27">
        <description><![CDATA[provides methods to render the sourcecode for statements]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="27" name="package" description="PhpParserApi"/>
        <tag line="27" name="author" description="Nico de Haen"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="38" package="">
        <name>render</name>
        <type>function</type>
        <docblock line="35">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="35" name="param" description="" type="array" variable="$stmts">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$stmts</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="45" package="">
        <name>renderClassObject</name>
        <type>function</type>
        <argument line="45">
          <name>$classObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="50" package="">
        <name>renderFileObject</name>
        <type>function</type>
        <argument line="50">
          <name>$fileObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="65" package="">
        <name>pStmt_Namespace</name>
        <type>function</type>
        <docblock line="57">
          <description><![CDATA[Overrides the according method of the printer since
we don't want to get all Namespace Statements here
Since namespace extends]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="param" description="" type="\PHPParser_Node_Stmt_Namespace" variable="$node">
            <type by_reference="false">\PHPParser_Node_Stmt_Namespace</type>
          </tag>
          <tag line="57" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$node</name>
          <default><![CDATA[]]></default>
          <type>PHPParser_Node_Stmt_Namespace</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="Service/Parser.php" hash="bd60067d2c3e5ad210c29e384529f757" package="PhpParserApi">
    <docblock line="26">
      <description><![CDATA[provides methods to generate classes from PHP code]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="26" name="package" description="PhpParserApi"/>
      <tag line="26" name="author" description="Nico de Haen"/>
    </docblock>
    <parse_markers>
      <critical line="36" code="50019">No short description for property $fileVisitor</critical>
      <critical line="41" code="50019">No short description for property $traverser</critical>
      <critical line="46" code="50019">No short description for property $classFactory</critical>
      <error line="52" code="50012">No short description for method parse()</error>
      <error line="76" code="50012">No short description for method parseFile()</error>
      <error line="92" code="50012">No short description for method parseRawStatements()</error>
      <error line="100" code="50012">No short description for method setFileVisitor()</error>
      <error line="107" code="50012">No short description for method setTraverser()</error>
      <error line="114" code="50012">No short description for method setClassFactory()</error>
      <error line="121" code="50012">No short description for method replaceNodeProperty()</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="34" package="PhpParserApi">
      <name>Tx_PhpParser_Service_Parser</name>
      <full_name>\Tx_PhpParser_Service_Parser</full_name>
      <extends>\PHPParser_Parser</extends>
      <docblock line="26">
        <description><![CDATA[provides methods to generate classes from PHP code]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="package" description="PhpParserApi"/>
        <tag line="26" name="author" description="Nico de Haen"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="39" package="Default">
        <name>$fileVisitor</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="36">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="36" name="var" description="" type="\Tx_PhpParser_Parser_Visitor_FileVisitorInterface">
            <type by_reference="false">\Tx_PhpParser_Parser_Visitor_FileVisitorInterface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="44" package="Default">
        <name>$traverser</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="41">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="var" description="" type="\Tx_Php_Parser_TraverserInterface">
            <type by_reference="false">\Tx_Php_Parser_TraverserInterface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="49" package="Default">
        <name>$classFactory</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="46">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="var" description="" type="\Tx_PhpParser_Parser_ClassFactoryInterface">
            <type by_reference="false">\Tx_PhpParser_Parser_ClassFactoryInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="56" package="">
        <name>parse</name>
        <type>function</type>
        <docblock line="52">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="52" name="param" description="" type="string" variable="$code">
            <type by_reference="false">string</type>
          </tag>
          <tag line="52" name="return" description="" type="\Tx_PhpParser_Domain_Model_File">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_File</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$code</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="81" package="">
        <name>parseFile</name>
        <type>function</type>
        <docblock line="76">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="param" description="" type="string" variable="$fileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="return" description="" type="\Tx_PhpParser_Domain_Model_File">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_File</type>
          </tag>
          <tag line="76" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$fileName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="96" package="">
        <name>parseRawStatements</name>
        <type>function</type>
        <docblock line="92">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="92" name="param" description="" type="string" variable="$code">
            <type by_reference="false">string</type>
          </tag>
          <tag line="92" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="96">
          <name>$code</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="103" package="">
        <name>setFileVisitor</name>
        <type>function</type>
        <docblock line="100">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="100" name="param" description="" type="\Tx_PhpParser_Parser_Visitor_FileVisitorInterface" variable="$visitor">
            <type by_reference="false">\Tx_PhpParser_Parser_Visitor_FileVisitorInterface</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$visitor</name>
          <default><![CDATA[]]></default>
          <type>Tx_PhpParser_Parser_Visitor_FileVisitorInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="110" package="">
        <name>setTraverser</name>
        <type>function</type>
        <docblock line="107">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="107" name="param" description="" type="\Tx_PhpParser_Parser_TraverserInterface" variable="$traverser">
            <type by_reference="false">\Tx_PhpParser_Parser_TraverserInterface</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$traverser</name>
          <default><![CDATA[]]></default>
          <type>Tx_PhpParser_Parser_TraverserInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="117" package="">
        <name>setClassFactory</name>
        <type>function</type>
        <docblock line="114">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="114" name="param" description="" type="\Tx_PhpParser_Parser_ClassFactoryInterface" variable="$classFactory">
            <type by_reference="false">\Tx_PhpParser_Parser_ClassFactoryInterface</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$classFactory</name>
          <default><![CDATA[]]></default>
          <type>Tx_PhpParser_Parser_ClassFactoryInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="128" package="">
        <name>replaceNodeProperty</name>
        <type>function</type>
        <docblock line="121">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="121" name="param" description="" type="array" variable="$stmts">
            <type by_reference="false">array</type>
          </tag>
          <tag line="121" name="param" description="" type="array" variable="$replacements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="121" name="param" description="" type="string" variable="$nodeType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="121" name="param" description="" type="string" variable="$nodeProperty">
            <type by_reference="false">string</type>
          </tag>
          <tag line="121" name="return" description="" type="\PHPParser_Node">
            <type by_reference="false">\PHPParser_Node</type>
          </tag>
        </docblock>
        <argument line="128">
          <name>$stmts</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="128">
          <name>$replacements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="128">
          <name>$nodeType</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="128">
          <name>$nodeProperty</name>
          <default><![CDATA['name']]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Parser/Traverser.php" hash="9ffa4be87fbd8da621bbff3e7511bfcd" package="PhpParserApi">
    <docblock line="26">
      <description><![CDATA[]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="26" name="package" description="PhpParserApi"/>
      <tag line="26" name="author" description="Nico de Haen"/>
    </docblock>
    <parse_markers>
      <error line="33" code="50010">No DocBlock was found for method resetVisitors()</error>
      <critical line="26" code="50005">No short description for class Tx_PhpParser_Parser_Traverser</critical>
      <critical line="26" code="50008">No short description for file Parser/Traverser.php</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="31" package="PhpParserApi">
      <name>Tx_PhpParser_Parser_Traverser</name>
      <full_name>\Tx_PhpParser_Parser_Traverser</full_name>
      <extends>\PHPParser_NodeTraverser</extends>
      <implements>\Tx_PhpParser_Parser_TraverserInterface</implements>
      <docblock line="26">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="package" description="PhpParserApi"/>
        <tag line="26" name="author" description="Nico de Haen"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="33" package="">
        <name>resetVisitors</name>
        <type>function</type>
      </method>
    </class>
  </file>
  <file path="Parser/DocCommentParser.php" hash="46d7134fed9d6a551455b8d080a5f620" package="PhpParserApi">
    <docblock line="26">
      <description><![CDATA[]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="26" name="package" description="PhpParserApi"/>
      <tag line="26" name="author" description="Nico de Haen"/>
    </docblock>
    <parse_markers>
      <critical line="33" code="50019">No short description for property $description</critical>
      <critical line="38" code="50019">No short description for property $tags</critical>
      <error line="43" code="50010">No DocBlock was found for method parse()</error>
      <error line="48" code="50010">No DocBlock was found for method getTags()</error>
      <error line="52" code="50010">No DocBlock was found for method renderDocComment()</error>
      <critical line="26" code="50005">No short description for class Tx_PhpParser_Parser_DocCommentParser</critical>
      <critical line="26" code="50008">No short description for file Parser/DocCommentParser.php</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="31" package="PhpParserApi">
      <name>Tx_PhpParser_Parser_DocCommentParser</name>
      <full_name>\Tx_PhpParser_Parser_DocCommentParser</full_name>
      <extends/>
      <docblock line="26">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="package" description="PhpParserApi"/>
        <tag line="26" name="author" description="Nico de Haen"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="36" package="Default">
        <name>$description</name>
        <default><![CDATA['']]></default>
        <docblock line="33">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="33" name="var" description="The description as found in the doc comment" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="41" package="Default">
        <name>$tags</name>
        <default><![CDATA[array()]]></default>
        <docblock line="38">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="An array of tag names and their values (multiple values are possible)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="43" package="">
        <name>parse</name>
        <type>function</type>
        <argument line="43">
          <name>$docComment</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="48" package="">
        <name>getTags</name>
        <type>function</type>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="52" package="">
        <name>renderDocComment</name>
        <type>function</type>
        <argument line="52">
          <name>$tags</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="52">
          <name>$description</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="89" package="">
        <name>parseDocComment</name>
        <type>function</type>
        <docblock line="81">
          <description><![CDATA[Parses the given doc comment and saves the result (description and
tags) in the parser's object. They can be retrieved by the
getTags() getTagValues() and getDescription() methods.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="param" description="A doc comment as returned by the reflection getDocComment() method" type="string" variable="$docComment">
            <type by_reference="false">string</type>
          </tag>
          <tag line="81" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$docComment</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="109" package="">
        <name>getTagsValues</name>
        <type>function</type>
        <docblock line="104">
          <description><![CDATA[Returns the tags which have been previously parsed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="104" name="return" description="Array of tag names and their (multiple) values" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="121" package="">
        <name>getTagValues</name>
        <type>function</type>
        <docblock line="113">
          <description><![CDATA[Returns the values of the specified tag. The doc comment
must be parsed with parseDocComment() before tags are
available.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="113" name="param" description="The tag name to retrieve the values for" type="string" variable="$tagName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="113" name="return" description="The tag's values" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$tagName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="132" package="">
        <name>isTaggedWith</name>
        <type>function</type>
        <docblock line="126">
          <description><![CDATA[Checks if a tag with the given name exists]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="126" name="param" description="The tag name to check for" type="string" variable="$tagName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="return" description="TRUE the tag exists, otherwise FALSE" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="132">
          <name>$tagName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="141" package="">
        <name>getDescription</name>
        <type>function</type>
        <docblock line="136">
          <description><![CDATA[Returns the description which has been previously parsed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="136" name="return" description="The description which has been parsed" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="152" package="">
        <name>parseTag</name>
        <type>function</type>
        <docblock line="145">
          <description><![CDATA[Parses a line of a doc comment for a tag and its value.]]></description>
          <long-description><![CDATA[<p>The result is stored in the interal tags array.</p>]]></long-description>
          <tag line="145" name="param" description="A line of a doc comment which starts with an @-sign" type="string" variable="$line">
            <type by_reference="false">string</type>
          </tag>
          <tag line="145" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="152">
          <name>$line</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Parser/ClassFactoryInterface.php" hash="232176bd7f3326c4e528aeef22bbd6c9" package="PhpParserApi">
    <docblock line="26">
      <description><![CDATA[]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="26" name="package" description="PhpParserApi"/>
      <tag line="26" name="author" description="Nico de Haen"/>
    </docblock>
    <parse_markers>
      <error line="33" code="50010">No DocBlock was found for method buildClassObjectFromNode()</error>
      <error line="35" code="50010">No DocBlock was found for method buildClassMethodObjectFromNode()</error>
      <error line="37" code="50010">No DocBlock was found for method buildPropertyObjectFromNode()</error>
      <error line="39" code="50010">No DocBlock was found for method buildFunctionObjectFromNode()</error>
      <error line="41" code="50010">No DocBlock was found for method buildNamespaceObjectFromNode()</error>
      <critical line="26" code="50008">No short description for file Parser/ClassFactoryInterface.php</critical>
    </parse_markers>
    <interface namespace="default" line="31" package="PhpParserApi">
      <name>Tx_PhpParser_Parser_ClassFactoryInterface</name>
      <full_name>\Tx_PhpParser_Parser_ClassFactoryInterface</full_name>
      <extends/>
      <docblock line="26">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="package" description="PhpParserApi"/>
        <tag line="26" name="author" description="Nico de Haen"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="33" package="">
        <name>buildClassObjectFromNode</name>
        <type>function</type>
        <argument line="33">
          <name>$node</name>
          <default><![CDATA[]]></default>
          <type>PHPParser_Node_Stmt_Class</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="35" package="">
        <name>buildClassMethodObjectFromNode</name>
        <type>function</type>
        <argument line="35">
          <name>$node</name>
          <default><![CDATA[]]></default>
          <type>PHPParser_Node_Stmt_ClassMethod</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="37" package="">
        <name>buildPropertyObjectFromNode</name>
        <type>function</type>
        <argument line="37">
          <name>$node</name>
          <default><![CDATA[]]></default>
          <type>PHPParser_Node_Stmt_Property</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="39" package="">
        <name>buildFunctionObjectFromNode</name>
        <type>function</type>
        <argument line="39">
          <name>$node</name>
          <default><![CDATA[]]></default>
          <type>PHPParser_Node_Stmt_Function</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="41" package="">
        <name>buildNamespaceObjectFromNode</name>
        <type>function</type>
        <argument line="41">
          <name>$node</name>
          <default><![CDATA[]]></default>
          <type>PHPParser_Node_Stmt_Namespace</type>
        </argument>
      </method>
    </interface>
  </file>
  <file path="Parser/NodeFactory.php" hash="acdb33df99f1a2b93c0c19b142364dc7" package="PhpParserApi">
    <docblock line="26">
      <description><![CDATA[]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="26" name="package" description="PhpParserApi"/>
      <tag line="26" name="author" description="Nico de Haen"/>
    </docblock>
    <parse_markers>
      <error line="33" code="50012">No short description for method buildClassNode()</error>
      <error line="43" code="50012">No short description for method buildNamespaceNode()</error>
      <error line="53" code="50012">No short description for method buildPropertyNode()</error>
      <error line="63" code="50012">No short description for method buildConstantNode()</error>
      <error line="74" code="50012">No short description for method buildClassConstantNode()</error>
      <critical line="26" code="50005">No short description for class Tx_PhpParser_Parser_NodeFactory</critical>
      <critical line="26" code="50008">No short description for file Parser/NodeFactory.php</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="31" package="PhpParserApi">
      <name>Tx_PhpParser_Parser_NodeFactory</name>
      <full_name>\Tx_PhpParser_Parser_NodeFactory</full_name>
      <extends/>
      <docblock line="26">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="package" description="PhpParserApi"/>
        <tag line="26" name="author" description="Nico de Haen"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="38" package="">
        <name>buildClassNode</name>
        <type>function</type>
        <docblock line="33">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="33" name="static" description=""/>
          <tag line="33" name="param" description="" type="" variable="$name"/>
          <tag line="33" name="return" description="" type="\PHPParser_Node_Stmt_Class">
            <type by_reference="false">\PHPParser_Node_Stmt_Class</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="48" package="">
        <name>buildNamespaceNode</name>
        <type>function</type>
        <docblock line="43">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="static" description=""/>
          <tag line="43" name="param" description="" type="" variable="$name"/>
          <tag line="43" name="return" description="" type="\PHPParser_Node_Stmt_Namespace">
            <type by_reference="false">\PHPParser_Node_Stmt_Namespace</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="58" package="">
        <name>buildPropertyNode</name>
        <type>function</type>
        <docblock line="53">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="static" description=""/>
          <tag line="53" name="param" description="" type="" variable="$name"/>
          <tag line="53" name="return" description="" type="\PHPParser_Node_Stmt_Property">
            <type by_reference="false">\PHPParser_Node_Stmt_Property</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="69" package="">
        <name>buildConstantNode</name>
        <type>function</type>
        <docblock line="63">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="static" description=""/>
          <tag line="63" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="63" name="return" description="" type="\PHPParser_Node_Const">
            <type by_reference="false">\PHPParser_Node_Const</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="69">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="80" package="">
        <name>buildClassConstantNode</name>
        <type>function</type>
        <docblock line="74">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="74" name="static" description=""/>
          <tag line="74" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="74" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="74" name="return" description="" type="\PHPParser_Node_Const">
            <type by_reference="false">\PHPParser_Node_Const</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="80">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="94" package="">
        <name>buildNodeFromValue</name>
        <type>function</type>
        <docblock line="86">
          <description><![CDATA[Normalizes a value: Converts nulls, booleans, integers,
floats and strings into their respective nodes]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="86" name="param" description="The value to normalize" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="86" name="return" description="The normalized value" type="\PHPParser_Node_Expr">
            <type by_reference="false">\PHPParser_Node_Expr</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="141" package="">
        <name>buildNodeFromName</name>
        <type>function</type>
        <docblock line="134">
          <description><![CDATA[Normalizes a name: Converts plain string names to PHPParser_Node_Name.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="134" name="param" description="The name to normalize" type="\PHPParser_Node_Name|string" variable="$name">
            <type by_reference="false">\PHPParser_Node_Name</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="134" name="return" description="The normalized name" type="\PHPParser_Node_Name">
            <type by_reference="false">\PHPParser_Node_Name</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Parser/Visitor/ReplaceVisitor.php" hash="571dff0e789035ad895ede5472228ecb" package="PhpParserApi">
    <docblock line="26">
      <description><![CDATA[a generic visitor to replace node properties in statements
(Usage see: Tests/Function/ModifyObjects renameMethodParameterAndUpdateMethodBody)]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="26" name="package" description="PhpParserApi"/>
      <tag line="26" name="author" description="Nico de Haen"/>
    </docblock>
    <parse_markers>
      <critical line="39" code="50019">No short description for property $nodeType</critical>
      <critical line="44" code="50019">No short description for property $nodeProperty</critical>
      <critical line="49" code="50019">No short description for property $replacements</critical>
      <error line="54" code="50010">No DocBlock was found for method getClassObject()</error>
      <error line="58" code="50012">No short description for method leaveNode()</error>
      <error line="83" code="50010">No DocBlock was found for method beforeTraverse()</error>
      <error line="84" code="50010">No DocBlock was found for method enterNode()</error>
      <error line="85" code="50010">No DocBlock was found for method afterTraverse()</error>
      <error line="87" code="50012">No short description for method setReplacements()</error>
      <error line="106" code="50010">No DocBlock was found for method setNodeType()</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="36" package="PhpParserApi">
      <name>Tx_PhpParser_Parser_Visitor_ReplaceVisitor</name>
      <full_name>\Tx_PhpParser_Parser_Visitor_ReplaceVisitor</full_name>
      <extends>\PHPParser_NodeVisitorAbstract</extends>
      <docblock line="26">
        <description><![CDATA[a generic visitor to replace node properties in statements
(Usage see: Tests/Function/ModifyObjects renameMethodParameterAndUpdateMethodBody)]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="package" description="PhpParserApi"/>
        <tag line="26" name="author" description="Nico de Haen"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="42" package="Default">
        <name>$nodeType</name>
        <default><![CDATA['']]></default>
        <docblock line="39">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="39" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="47" package="Default">
        <name>$nodeProperty</name>
        <default><![CDATA['']]></default>
        <docblock line="44">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" package="Default">
        <name>$replacements</name>
        <default><![CDATA[array()]]></default>
        <docblock line="49">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="49" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="54" package="">
        <name>getClassObject</name>
        <type>function</type>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="62" package="">
        <name>leaveNode</name>
        <type>function</type>
        <docblock line="58">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="param" description="" type="\PHPParser_Node" variable="$node">
            <type by_reference="false">\PHPParser_Node</type>
          </tag>
          <tag line="58" name="return" description="" type="\PHPParser_Node|void">
            <type by_reference="false">\PHPParser_Node</type>
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$node</name>
          <default><![CDATA[]]></default>
          <type>PHPParser_Node</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="83" package="">
        <name>beforeTraverse</name>
        <type>function</type>
        <argument line="83">
          <name>$nodes</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="84" package="">
        <name>enterNode</name>
        <type>function</type>
        <argument line="84">
          <name>$node</name>
          <default><![CDATA[]]></default>
          <type>PHPParser_Node</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="85" package="">
        <name>afterTraverse</name>
        <type>function</type>
        <argument line="85">
          <name>$nodes</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="91" package="">
        <name>setReplacements</name>
        <type>function</type>
        <docblock line="87">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="87" name="param" description="$oldValue =&gt; $newValue" type="array" variable="$replacements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="87" name="return" description="" type="\Tx_PhpParser_Parser_Visitor_ReplaceVisitor">
            <type by_reference="false">\Tx_PhpParser_Parser_Visitor_ReplaceVisitor</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$replacements</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="101" package="">
        <name>setNodeProperty</name>
        <type>function</type>
        <docblock line="96">
          <description><![CDATA[The property of a node that should be changed (defaults to 'name')]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="96" name="param" description="" type="" variable="$nodeProperty"/>
          <tag line="96" name="return" description="" type="\Tx_PhpParser_Parser_Visitor_ReplaceVisitor">
            <type by_reference="false">\Tx_PhpParser_Parser_Visitor_ReplaceVisitor</type>
          </tag>
        </docblock>
        <argument line="101">
          <name>$nodeProperty</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="106" package="">
        <name>setNodeType</name>
        <type>function</type>
        <argument line="106">
          <name>$nodeType</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Parser/Visitor/FileVisitor.php" hash="b8765935addc541b195220bb12b48ddc" package="PhpParserApi">
    <docblock line="26">
      <description><![CDATA[]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="26" name="package" description="PhpParserApi"/>
      <tag line="26" name="author" description="Nico de Haen"/>
    </docblock>
    <parse_markers>
      <error line="41" code="50018">No DocBlock was found for property $properties</error>
      <critical line="43" code="50019">No short description for property $currentClassObject</critical>
      <critical line="48" code="50019">No short description for property $currentNamespace</critical>
      <critical line="53" code="50019">No short description for property $currentContainer</critical>
      <critical line="58" code="50019">No short description for property $fileObject</critical>
      <critical line="63" code="50019">No short description for property $classFactory</critical>
      <error line="68" code="50018">No DocBlock was found for property $onFirstLevel</error>
      <error line="78" code="50018">No DocBlock was found for property $lastNode</error>
      <error line="80" code="50010">No DocBlock was found for method getFileObject()</error>
      <error line="84" code="50012">No short description for method enterNode()</error>
      <error line="101" code="50012">No short description for method leaveNode()</error>
      <error line="154" code="50010">No DocBlock was found for method beforeTraverse()</error>
      <error line="159" code="50010">No DocBlock was found for method afterTraverse()</error>
      <error line="162" code="50012">No short description for method setClassFactory()</error>
      <error line="169" code="50010">No DocBlock was found for method isContainerNode()</error>
      <error line="173" code="50010">No DocBlock was found for method addLastNode()</error>
      <critical line="26" code="50008">No short description for file Parser/Visitor/FileVisitor.php</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="39" package="PhpParserApi">
      <name>Tx_PhpParser_Parser_Visitor_FileVisitor</name>
      <full_name>\Tx_PhpParser_Parser_Visitor_FileVisitor</full_name>
      <extends>\PHPParser_NodeVisitorAbstract</extends>
      <implements>\Tx_PhpParser_Parser_Visitor_FileVisitorInterface</implements>
      <docblock line="32">
        <description><![CDATA[provides methods to import a class object and methods and properties]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="32" name="package" description="PhpParserApi"/>
        <tag line="32" name="author" description="Nico de Haen"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="41" package="Default">
        <name>$properties</name>
        <default><![CDATA[array()]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="46" package="Default">
        <name>$currentClassObject</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="43">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="var" description="" type="\Tx_PhpParser_Domain_Model_Class">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_Class</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="51" package="Default">
        <name>$currentNamespace</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="48">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="48" name="var" description="" type="\Tx_PhpParser_Domain_Model_Namespace">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_Namespace</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="56" package="Default">
        <name>$currentContainer</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="53">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="var" description="" type="\Tx_PhpParser_Domain_Model_Container">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_Container</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="61" package="Default">
        <name>$fileObject</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="58">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="var" description="" type="\Tx_PhpParser_Domain_Model_File">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_File</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="66" package="Default">
        <name>$classFactory</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="63">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="var" description="" type="\Tx_PhpParser_Parser_ClassFactoryInterface">
            <type by_reference="false">\Tx_PhpParser_Parser_ClassFactoryInterface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="68" package="Default">
        <name>$onFirstLevel</name>
        <default><![CDATA[TRUE]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="76" package="Default">
        <name>$contextStack</name>
        <default><![CDATA[array()]]></default>
        <docblock line="70">
          <description><![CDATA[currently not used, might be useful for filtering etc.]]></description>
          <long-description><![CDATA[<p>it keeps a reference to the current "first level" node</p>]]></long-description>
          <tag line="70" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="78" package="Default">
        <name>$lastNode</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="80" package="">
        <name>getFileObject</name>
        <type>function</type>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="89" package="">
        <name>enterNode</name>
        <type>function</type>
        <docblock line="84">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="84" name="param" description="" type="\PHPParser_Node" variable="$node">
            <type by_reference="false">\PHPParser_Node</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$node</name>
          <default><![CDATA[]]></default>
          <type>PHPParser_Node</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="104" package="">
        <name>leaveNode</name>
        <type>function</type>
        <docblock line="101">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="101" name="param" description="" type="\PHPParser_Node" variable="$node">
            <type by_reference="false">\PHPParser_Node</type>
          </tag>
        </docblock>
        <argument line="104">
          <name>$node</name>
          <default><![CDATA[]]></default>
          <type>PHPParser_Node</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="154" package="">
        <name>beforeTraverse</name>
        <type>function</type>
        <argument line="154">
          <name>$nodes</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="159" package="">
        <name>afterTraverse</name>
        <type>function</type>
        <argument line="159">
          <name>$nodes</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="165" package="">
        <name>setClassFactory</name>
        <type>function</type>
        <docblock line="162">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="162" name="param" description="" type="\Tx_PhpParser_Parser_ClassFactoryInterface" variable="$classFactory">
            <type by_reference="false">\Tx_PhpParser_Parser_ClassFactoryInterface</type>
          </tag>
        </docblock>
        <argument line="165">
          <name>$classFactory</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="169" package="">
        <name>isContainerNode</name>
        <type>function</type>
        <argument line="169">
          <name>$node</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="173" package="">
        <name>addLastNode</name>
        <type>function</type>
      </method>
    </class>
  </file>
  <file path="Parser/Visitor/FileVisitorInterface.php" hash="d2dc2e0342d5cef060e398d8f3153e39" package="PhpParserApi">
    <docblock line="26">
      <description><![CDATA[]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="26" name="package" description="PhpParserApi"/>
      <tag line="26" name="author" description="Nico de Haen"/>
    </docblock>
    <parse_markers>
      <error line="34" code="50010">No DocBlock was found for method getFileObject()</error>
      <error line="36" code="50012">No short description for method setClassFactory()</error>
      <critical line="26" code="50008">No short description for file Parser/Visitor/FileVisitorInterface.php</critical>
    </parse_markers>
    <interface namespace="default" line="31" package="PhpParserApi">
      <name>Tx_PhpParser_Parser_Visitor_FileVisitorInterface</name>
      <full_name>\Tx_PhpParser_Parser_Visitor_FileVisitorInterface</full_name>
      <extends/>
      <docblock line="26">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="package" description="PhpParserApi"/>
        <tag line="26" name="author" description="Nico de Haen"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="34" package="">
        <name>getFileObject</name>
        <type>function</type>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="39" package="">
        <name>setClassFactory</name>
        <type>function</type>
        <docblock line="36">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="36" name="param" description="" type="\Tx_PhpParser_Parser_ClassFactoryInterface" variable="$classFactory">
            <type by_reference="false">\Tx_PhpParser_Parser_ClassFactoryInterface</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$classFactory</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="Parser/Visitor/ReplaceClassNamesVisitor.php" hash="cb0ba68c7cc22308a07b76206899f290" package="PhpParserApi">
    <docblock line="27">
      <description><![CDATA[Example Visitor
replaces all occurances of new "className" and static class calls like "className::"]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="27" name="package" description="PhpParserApi"/>
      <tag line="27" name="author" description="Nico de Haen"/>
    </docblock>
    <parse_markers>
      <error line="38" code="50018">No DocBlock was found for property $nodeType</error>
      <error line="40" code="50018">No DocBlock was found for property $nodeProperty</error>
      <error line="42" code="50018">No DocBlock was found for property $oldClassPrefix</error>
      <error line="44" code="50018">No DocBlock was found for property $newClassPrefix</error>
      <error line="46" code="50010">No DocBlock was found for method getClassObject()</error>
      <error line="50" code="50012">No short description for method leaveNode()</error>
      <error line="50" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $node in leaveNode()</error>
      <error line="65" code="50010">No DocBlock was found for method beforeTraverse()</error>
      <error line="66" code="50010">No DocBlock was found for method enterNode()</error>
      <error line="67" code="50010">No DocBlock was found for method afterTraverse()</error>
      <error line="69" code="50010">No DocBlock was found for method setNewClassPrefix()</error>
      <error line="73" code="50010">No DocBlock was found for method setOldClassPrefix()</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="35" package="PhpParserApi">
      <name>Tx_PhpParser_Parser_Visitor_ReplaceClassNamesVisitor</name>
      <full_name>\Tx_PhpParser_Parser_Visitor_ReplaceClassNamesVisitor</full_name>
      <extends>\PHPParser_NodeVisitorAbstract</extends>
      <docblock line="27">
        <description><![CDATA[Example Visitor
replaces all occurances of new "className" and static class calls like "className::"]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="27" name="package" description="PhpParserApi"/>
        <tag line="27" name="author" description="Nico de Haen"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="38" package="Default">
        <name>$nodeType</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="40" package="Default">
        <name>$nodeProperty</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="42" package="Default">
        <name>$oldClassPrefix</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="44" package="Default">
        <name>$newClassPrefix</name>
        <default><![CDATA[]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="46" package="">
        <name>getClassObject</name>
        <type>function</type>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="54" package="">
        <name>leaveNode</name>
        <type>function</type>
        <docblock line="50">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="param" description="" type="\PHPParser_Node" variable="$node">
            <type by_reference="false">\PHPParser_Node</type>
          </tag>
          <tag line="50" name="return" description="" type="\PHPParser_Node|void">
            <type by_reference="false">\PHPParser_Node</type>
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$node</name>
          <default><![CDATA[]]></default>
          <type>PHPParser_Node</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="65" package="">
        <name>beforeTraverse</name>
        <type>function</type>
        <argument line="65">
          <name>$nodes</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="66" package="">
        <name>enterNode</name>
        <type>function</type>
        <argument line="66">
          <name>$node</name>
          <default><![CDATA[]]></default>
          <type>PHPParser_Node</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="67" package="">
        <name>afterTraverse</name>
        <type>function</type>
        <argument line="67">
          <name>$nodes</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="69" package="">
        <name>setNewClassPrefix</name>
        <type>function</type>
        <argument line="69">
          <name>$newClassPrefix</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="73" package="">
        <name>setOldClassPrefix</name>
        <type>function</type>
        <argument line="73">
          <name>$oldClassPrefix</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Parser/Utility/NodeConverter.php" hash="d783906604a47b6a65a04162cddd05ba" package="PhpParserApi">
    <docblock line="26">
      <description><![CDATA[]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="26" name="package" description="PhpParserApi"/>
      <tag line="26" name="author" description="Nico de Haen"/>
    </docblock>
    <markers>
      <todo line="72">support more node types?</todo>
    </markers>
    <parse_markers>
      <error line="34" code="50018">No DocBlock was found for property $accessorModifiers</error>
      <error line="41" code="50010">No DocBlock was found for method getTypeHintFromVarType()</error>
      <error line="54" code="50012">No short description for method modifierToNames()</error>
      <error line="106" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $node in convertClassConstantNodeToArray()</error>
      <error line="123" code="50010">No DocBlock was found for method getVarTypeFromValue()</error>
      <critical line="26" code="50005">No short description for class Tx_PhpParser_Parser_Utility_NodeConverter</critical>
      <critical line="26" code="50008">No short description for file Parser/Utility/NodeConverter.php</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="31" package="PhpParserApi">
      <name>Tx_PhpParser_Parser_Utility_NodeConverter</name>
      <full_name>\Tx_PhpParser_Parser_Utility_NodeConverter</full_name>
      <extends/>
      <docblock line="26">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="package" description="PhpParserApi"/>
        <tag line="26" name="author" description="Nico de Haen"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="34" package="Default">
        <name>$accessorModifiers</name>
        <default><![CDATA[array(
		PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC,
		PHPParser_Node_Stmt_Class::MODIFIER_PROTECTED,
		PHPParser_Node_Stmt_Class::MODIFIER_PRIVATE

	)]]></default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="41" package="">
        <name>getTypeHintFromVarType</name>
        <type>function</type>
        <argument line="41">
          <name>$varType</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="59" package="">
        <name>modifierToNames</name>
        <type>function</type>
        <docblock line="54">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="static" description=""/>
          <tag line="54" name="param" description="" type="int" variable="$modifiers">
            <type by_reference="false">int</type>
          </tag>
          <tag line="54" name="return" description="with names as strings" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$modifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="78" package="">
        <name>getValueFromNode</name>
        <type>function</type>
        <docblock line="70">
          <description><![CDATA[Convert various PHPParser_Nodes to the value they represent
//TODO: support more node types?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="70" name="static" description=""/>
          <tag line="70" name="param" description="" type="" variable="$node"/>
          <tag line="70" name="return" description="" type="array|null|string">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$node</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="114" package="">
        <name>convertClassConstantNodeToArray</name>
        <type>function</type>
        <docblock line="106">
          <description><![CDATA[Constants consist of a simple key => value array in the API
This methods converts  PHPParser_Node_Stmt_ClassConst or PHPParser_Node_Stmt_Const]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="106" name="static" description=""/>
          <tag line="106" name="param" description="PHPParser_Node" type="" variable="$node"/>
          <tag line="106" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="114">
          <name>$node</name>
          <default><![CDATA[]]></default>
          <type>PHPParser_Node</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="123" package="">
        <name>getVarTypeFromValue</name>
        <type>function</type>
        <argument line="123">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Parser/TraverserInterface.php" hash="4fc811fd051e79c70bc8236c0e89fc73" package="PhpParserApi">
    <docblock line="26">
      <description><![CDATA[]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="26" name="package" description="PhpParserApi"/>
      <tag line="26" name="author" description="Nico de Haen"/>
    </docblock>
    <parse_markers>
      <error line="32" code="50010">No DocBlock was found for method resetVisitors()</error>
      <critical line="26" code="50008">No short description for file Parser/TraverserInterface.php</critical>
    </parse_markers>
    <interface namespace="default" line="31" package="PhpParserApi">
      <name>Tx_PhpParser_Parser_TraverserInterface</name>
      <full_name>\Tx_PhpParser_Parser_TraverserInterface</full_name>
      <extends/>
      <docblock line="26">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="package" description="PhpParserApi"/>
        <tag line="26" name="author" description="Nico de Haen"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="32" package="">
        <name>resetVisitors</name>
        <type>function</type>
      </method>
    </interface>
  </file>
  <file path="Parser/ClassFactory.php" hash="8e7c38021fa122ea2f9354f7d839d171" package="PhpParserApi">
    <docblock line="26">
      <description><![CDATA[]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="26" name="package" description="PhpParserApi"/>
      <tag line="26" name="author" description="Nico de Haen"/>
    </docblock>
    <parse_markers>
      <error line="33" code="50010">No DocBlock was found for method buildClassObjectFromNode()</error>
      <error line="45" code="50010">No DocBlock was found for method buildClassMethodObjectFromNode()</error>
      <error line="51" code="50010">No DocBlock was found for method buildFunctionObjectFromNode()</error>
      <error line="57" code="50010">No DocBlock was found for method buildPropertyObjectFromNode()</error>
      <error line="78" code="50010">No DocBlock was found for method buildNamespaceObjectFromNode()</error>
      <error line="85" code="50010">No DocBlock was found for method setPropertiesFromNode()</error>
      <critical line="26" code="50005">No short description for class Tx_PhpParser_Parser_ClassFactory</critical>
      <critical line="26" code="50008">No short description for file Parser/ClassFactory.php</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="31" package="PhpParserApi">
      <name>Tx_PhpParser_Parser_ClassFactory</name>
      <full_name>\Tx_PhpParser_Parser_ClassFactory</full_name>
      <extends/>
      <implements>\Tx_PhpParser_Parser_ClassFactoryInterface</implements>
      <docblock line="26">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="package" description="PhpParserApi"/>
        <tag line="26" name="author" description="Nico de Haen"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="33" package="">
        <name>buildClassObjectFromNode</name>
        <type>function</type>
        <argument line="33">
          <name>$classNode</name>
          <default><![CDATA[]]></default>
          <type>PHPParser_Node_Stmt_Class</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="45" package="">
        <name>buildClassMethodObjectFromNode</name>
        <type>function</type>
        <argument line="45">
          <name>$methodNode</name>
          <default><![CDATA[]]></default>
          <type>PHPParser_Node_Stmt_ClassMethod</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="51" package="">
        <name>buildFunctionObjectFromNode</name>
        <type>function</type>
        <argument line="51">
          <name>$functionNode</name>
          <default><![CDATA[]]></default>
          <type>PHPParser_Node_Stmt_Function</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="57" package="">
        <name>buildPropertyObjectFromNode</name>
        <type>function</type>
        <argument line="57">
          <name>$propertyNode</name>
          <default><![CDATA[]]></default>
          <type>PHPParser_Node_Stmt_Property</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="78" package="">
        <name>buildNamespaceObjectFromNode</name>
        <type>function</type>
        <argument line="78">
          <name>$node</name>
          <default><![CDATA[]]></default>
          <type>PHPParser_Node_Stmt_Namespace</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="85" package="">
        <name>setPropertiesFromNode</name>
        <type>function</type>
        <argument line="85">
          <name>$functionNode</name>
          <default><![CDATA[]]></default>
          <type>PHPParser_Node_Stmt</type>
        </argument>
        <argument line="85">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="AutoLoader.php" hash="df8b520a73067c1738401a9feea0ac29" package="PhpParserApi">
    <docblock line="26">
      <description><![CDATA[]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="26" name="package" description="PhpParserApi"/>
      <tag line="26" name="author" description="Nico de Haen"/>
    </docblock>
    <parse_markers>
      <error line="35" code="50018">No DocBlock was found for property $autoloadRegistry</error>
      <critical line="26" code="50005">No short description for class Tx_PhpParser_AutoLoader</critical>
      <critical line="26" code="50008">No short description for file AutoLoader.php</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="33" package="PhpParserApi">
      <name>Tx_PhpParser_AutoLoader</name>
      <full_name>\Tx_PhpParser_AutoLoader</full_name>
      <extends/>
      <docblock line="26">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="package" description="PhpParserApi"/>
        <tag line="26" name="author" description="Nico de Haen"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="35" package="Default">
        <name>$autoloadRegistry</name>
        <default><![CDATA[]]></default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="40" package="">
        <name>register</name>
        <type>function</type>
        <docblock line="37">
          <description><![CDATA[Registers PHPParser_Autoloader as an SPL autoloader.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="50" package="">
        <name>autoload</name>
        <type>function</type>
        <docblock line="45">
          <description><![CDATA[Handles autoloading of classes.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="param" description="A class name." type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Exception/FileNotFoundException.php" hash="a9e607199a9e22d8419d87a064920c91" package="PhpParserApi">
    <docblock line="25">
      <description><![CDATA[An exception thrown if an error occured during parsing a php file]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="25" name="author" description="Nico de Haen"/>
      <tag line="25" name="package" description="PhpParserApi"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="31" package="PhpParserApi">
      <name>Tx_PhpParser_Exception_FileNotFoundException</name>
      <full_name>\Tx_PhpParser_Exception_FileNotFoundException</full_name>
      <extends>\Exception</extends>
      <docblock line="25">
        <description><![CDATA[An exception thrown if an error occured during parsing a php file]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="25" name="author" description="Nico de Haen"/>
        <tag line="25" name="package" description="PhpParserApi"/>
      </docblock>
    </class>
  </file>
  <file path="Exception/SyntaxErrorException.php" hash="4e08a89e2675cabb06b3fe576f25c1f7" package="PhpParserApi">
    <docblock line="25">
      <description><![CDATA[An exception thrown if an operation was performed that is not allowed in PHP syntax]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="25" name="author" description="Nico de Haen"/>
      <tag line="25" name="package" description="PhpParserApi"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="31" package="PhpParserApi">
      <name>Tx_PhpParser_Exception_SyntaxErrorException</name>
      <full_name>\Tx_PhpParser_Exception_SyntaxErrorException</full_name>
      <extends>\Exception</extends>
      <docblock line="25">
        <description><![CDATA[An exception thrown if an operation was performed that is not allowed in PHP syntax]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="25" name="author" description="Nico de Haen"/>
        <tag line="25" name="package" description="PhpParserApi"/>
      </docblock>
    </class>
  </file>
  <file path="Exception/ParseErrorException.php" hash="8ca54576e7ee910af74ecba2a3b1a3d7" package="PhpParserApi">
    <docblock line="25">
      <description><![CDATA[An exception thrown if an error occured during parsing a php file]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="25" name="author" description="Nico de Haen"/>
      <tag line="25" name="package" description="PhpParserApi"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="31" package="PhpParserApi">
      <name>Tx_PhpParser_Exception_ParseErrorException</name>
      <full_name>\Tx_PhpParser_Exception_ParseErrorException</full_name>
      <extends>\Exception</extends>
      <docblock line="25">
        <description><![CDATA[An exception thrown if an error occured during parsing a php file]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="25" name="author" description="Nico de Haen"/>
        <tag line="25" name="package" description="PhpParserApi"/>
      </docblock>
    </class>
  </file>
  <file path="Domain/Model/Class/Property.php" hash="5c836fd29ebd7acdfda6823fbb93547b" package="PhpParserApi">
    <docblock line="27">
      <description><![CDATA[]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="27" name="author" description="Nico de Haen"/>
      <tag line="27" name="package" description="PhpParserApi"/>
      <tag line="27" name="license" description="http://www.gnu.org/licenses/gpl.html GNU General Public License, version 3 or later"/>
    </docblock>
    <parse_markers>
      <critical line="44" code="50019">No short description for property $varType</critical>
      <error line="49" code="50015">Argument $createNode is missing from the Docblock of __construct()</error>
      <error line="72" code="50015">Argument $updateNode is missing from the Docblock of setValue()</error>
      <error line="72" code="50015">Argument $updateVarType is missing from the Docblock of setValue()</error>
      <error line="95" code="50015">Argument $updateNodeName is missing from the Docblock of setName()</error>
      <error line="110" code="50012">No short description for method setVarType()</error>
      <error line="125" code="50012">No short description for method getVarType()</error>
      <critical line="27" code="50005">No short description for class Tx_PhpParser_Domain_Model_Class_Property</critical>
      <critical line="27" code="50008">No short description for file Domain/Model/Class/Property.php</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="34" package="PhpParserApi">
      <name>Tx_PhpParser_Domain_Model_Class_Property</name>
      <full_name>\Tx_PhpParser_Domain_Model_Class_Property</full_name>
      <extends>\Tx_PhpParser_Domain_Model_AbstractObject</extends>
      <docblock line="27">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="27" name="author" description="Nico de Haen"/>
        <tag line="27" name="package" description="PhpParserApi"/>
        <tag line="27" name="license" description="http://www.gnu.org/licenses/gpl.html GNU General Public License, version 3 or later"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="42" package="Default">
        <name>$value</name>
        <default><![CDATA[]]></default>
        <docblock line="37">
          <description><![CDATA[value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="47" package="Default">
        <name>$varType</name>
        <default><![CDATA['']]></default>
        <docblock line="44">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="55" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="49">
          <description><![CDATA[__construct]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="49" name="param" description="name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="55">
          <name>$createNode</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="68" package="">
        <name>getValue</name>
        <type>function</type>
        <docblock line="63">
          <description><![CDATA[getValue]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="78" package="">
        <name>setValue</name>
        <type>function</type>
        <docblock line="72">
          <description><![CDATA[Setter for value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="72" name="param" description="mixed" type="" variable="$value"/>
          <tag line="72" name="return" description="" type=""/>
        </docblock>
        <argument line="78">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="78">
          <name>$updateNode</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
        <argument line="78">
          <name>$updateVarType</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="101" package="">
        <name>setName</name>
        <type>function</type>
        <docblock line="95">
          <description><![CDATA[Setter for name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="95" name="param" description="name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="101">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="101">
          <name>$updateNodeName</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="113" package="">
        <name>setVarType</name>
        <type>function</type>
        <docblock line="110">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="110" name="param" description="" type="string" variable="$varType">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$varType</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="128" package="">
        <name>getVarType</name>
        <type>function</type>
        <docblock line="125">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="125" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Domain/Model/Class/Method.php" hash="752ada21e69c09bfab6842524a4973a7" package="PhpParserApi">
    <docblock line="27">
      <description><![CDATA[]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="27" name="author" description="Nico de Haen"/>
      <tag line="27" name="package" description="PhpParserApi"/>
      <tag line="27" name="license" description="http://www.gnu.org/licenses/gpl.html GNU General Public License, version 3 or later"/>
    </docblock>
    <parse_markers>
      <critical line="27" code="50005">No short description for class Tx_PhpParser_Domain_Model_Class_Method</critical>
      <critical line="27" code="50008">No short description for file Domain/Model/Class/Method.php</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="34" package="PhpParserApi">
      <name>Tx_PhpParser_Domain_Model_Class_Method</name>
      <full_name>\Tx_PhpParser_Domain_Model_Class_Method</full_name>
      <extends>\Tx_PhpParser_Domain_Model_Function</extends>
      <docblock line="27">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="27" name="author" description="Nico de Haen"/>
        <tag line="27" name="package" description="PhpParserApi"/>
        <tag line="27" name="license" description="http://www.gnu.org/licenses/gpl.html GNU General Public License, version 3 or later"/>
      </docblock>
    </class>
  </file>
  <file path="Domain/Model/Parameter.php" hash="c354621e2678ddd4a29830b592e56cd6" package="PhpParserApi">
    <docblock line="27">
      <description><![CDATA[]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="27" name="author" description="Nico de Haen"/>
      <tag line="27" name="package" description="PhpParserApi"/>
      <tag line="27" name="license" description="http://www.gnu.org/licenses/gpl.html GNU General Public License, version 3 or later"/>
    </docblock>
    <parse_markers>
      <error line="107" code="50015">Argument $updateNodeType is missing from the Docblock of setType()</error>
      <error line="148" code="50015">Argument $updateNodeDefault is missing from the Docblock of setDefault()</error>
      <error line="189" code="50010">No DocBlock was found for method setPassedByReference()</error>
      <error line="205" code="50015">Argument $updateNodeTypeHint is missing from the Docblock of setTypeHint()</error>
      <error line="221" code="50012">No short description for method setVarType()</error>
      <error line="221" code="50015">Argument $updateNodeType is missing from the Docblock of setVarType()</error>
      <error line="231" code="50012">No short description for method getVarType()</error>
      <critical line="27" code="50005">No short description for class Tx_PhpParser_Domain_Model_Parameter</critical>
      <critical line="27" code="50008">No short description for file Domain/Model/Parameter.php</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="34" package="PhpParserApi">
      <name>Tx_PhpParser_Domain_Model_Parameter</name>
      <full_name>\Tx_PhpParser_Domain_Model_Parameter</full_name>
      <extends>\Tx_PhpParser_Domain_Model_AbstractObject</extends>
      <docblock line="27">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="27" name="author" description="Nico de Haen"/>
        <tag line="27" name="package" description="PhpParserApi"/>
        <tag line="27" name="license" description="http://www.gnu.org/licenses/gpl.html GNU General Public License, version 3 or later"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="42" package="Default">
        <name>$varType</name>
        <default><![CDATA[]]></default>
        <docblock line="37">
          <description><![CDATA[varType]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="49" package="Default">
        <name>$typeHint</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="44">
          <description><![CDATA[typeHint]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="56" package="Default">
        <name>$default</name>
        <default><![CDATA[]]></default>
        <docblock line="51">
          <description><![CDATA[defaultValue]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="63" package="Default">
        <name>$position</name>
        <default><![CDATA[]]></default>
        <docblock line="58">
          <description><![CDATA[position]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="70" package="Default">
        <name>$optional</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="65">
          <description><![CDATA[optional]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="65" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="77" package="Default">
        <name>$passedByReference</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="72">
          <description><![CDATA[passedByReference]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="72" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="85" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="79">
          <description><![CDATA[__construct]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="79" name="param" description="" type="\PHPParser_Node_Param" variable="$parameterNode">
            <type by_reference="false">\PHPParser_Node_Param</type>
          </tag>
          <tag line="79" name="return" description="" type="\unknown_type">
            <type by_reference="false">\unknown_type</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$parameterNode</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="103" package="">
        <name>getType</name>
        <type>function</type>
        <docblock line="98">
          <description><![CDATA[Returns $type.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="98" name="return" description="" type=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="113" package="">
        <name>setType</name>
        <type>function</type>
        <docblock line="107">
          <description><![CDATA[Sets $type.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="107" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="107" name="return" description="" type=""/>
        </docblock>
        <argument line="113">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="113">
          <name>$updateNodeType</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="125" package="">
        <name>getPosition</name>
        <type>function</type>
        <docblock line="120">
          <description><![CDATA[getPosition]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="120" name="return" description="$position" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="135" package="">
        <name>setPosition</name>
        <type>function</type>
        <docblock line="129">
          <description><![CDATA[setter for position]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="129" name="param" description="" type="int" variable="$position">
            <type by_reference="false">int</type>
          </tag>
          <tag line="129" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="135">
          <name>$position</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="144" package="">
        <name>getDefault</name>
        <type>function</type>
        <docblock line="139">
          <description><![CDATA[getter for default]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="139" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="154" package="">
        <name>setDefault</name>
        <type>function</type>
        <docblock line="148">
          <description><![CDATA[setter for default]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="148" name="param" description="" type="" variable="$default"/>
          <tag line="148" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="154">
          <name>$default</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="154">
          <name>$updateNodeDefault</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="166" package="">
        <name>isOptional</name>
        <type>function</type>
        <docblock line="161">
          <description><![CDATA[isOptional]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="161" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="176" package="">
        <name>setOptional</name>
        <type>function</type>
        <docblock line="170">
          <description><![CDATA[setOptional]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="170" name="param" description="" type="" variable="$optional"/>
          <tag line="170" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="176">
          <name>$optional</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="185" package="">
        <name>isPassedByReference</name>
        <type>function</type>
        <docblock line="180">
          <description><![CDATA[isPassedByReference]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="180" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="189" package="">
        <name>setPassedByReference</name>
        <type>function</type>
        <argument line="189">
          <name>$passedByReference</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="189">
          <name>$updateNodeByRef</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="201" package="">
        <name>getTypeHint</name>
        <type>function</type>
        <docblock line="196">
          <description><![CDATA[getTypeHint]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="196" name="return" description="" type=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="211" package="">
        <name>setTypeHint</name>
        <type>function</type>
        <docblock line="205">
          <description><![CDATA[Sets $typeHint.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="205" name="param" description="" type="string" variable="$typeHint">
            <type by_reference="false">string</type>
          </tag>
          <tag line="205" name="return" description="" type=""/>
        </docblock>
        <argument line="211">
          <name>$typeHint</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="211">
          <name>$updateNodeTypeHint</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="224" package="">
        <name>setVarType</name>
        <type>function</type>
        <docblock line="221">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="221" name="param" description="" type="string" variable="$varType">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="224">
          <name>$varType</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="224">
          <name>$updateNodeType</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="234" package="">
        <name>getVarType</name>
        <type>function</type>
        <docblock line="231">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="231" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Domain/Model/Function.php" hash="4e5446d6e25f5d9caff849b89c72d6b5" package="PhpParserApi">
    <docblock line="26">
      <description><![CDATA[]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="26" name="package" description="PhpParserApi"/>
      <tag line="26" name="author" description="Nico de Haen"/>
    </docblock>
    <parse_markers>
      <error line="131" code="50012">No short description for method getParameterByPosition()</error>
      <critical line="26" code="50005">No short description for class Tx_PhpParser_Domain_Model_Function</critical>
      <critical line="26" code="50008">No short description for file Domain/Model/Function.php</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="31" package="PhpParserApi">
      <name>Tx_PhpParser_Domain_Model_Function</name>
      <full_name>\Tx_PhpParser_Domain_Model_Function</full_name>
      <extends>\Tx_PhpParser_Domain_Model_AbstractObject</extends>
      <docblock line="26">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="package" description="PhpParserApi"/>
        <tag line="26" name="author" description="Nico de Haen"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="38" package="Default">
        <name>$bodyStmts</name>
        <default><![CDATA[]]></default>
        <docblock line="33">
          <description><![CDATA[stmts of this methods body]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="33" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$parameters</name>
        <default><![CDATA[]]></default>
        <docblock line="40">
          <description><![CDATA[parameters]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="40" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="53" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="47">
          <description><![CDATA[__construct]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="47" name="return" description="" type=""/>
        </docblock>
        <argument line="53">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="60" package="">
        <name>initializeParameters</name>
        <type>function</type>
        <docblock line="57">
          <description><![CDATA[generate parameter objects and update param tags]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="92" package="">
        <name>setBodyStmts</name>
        <type>function</type>
        <docblock line="86">
          <description><![CDATA[Setter for body statements]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="86" name="param" description="" type="array" variable="$stmts">
            <type by_reference="false">array</type>
          </tag>
          <tag line="86" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="92">
          <name>$stmts</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="103" package="">
        <name>getBodyStmts</name>
        <type>function</type>
        <docblock line="98">
          <description><![CDATA[Getter for body statements]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="98" name="return" description="body" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="112" package="">
        <name>getParameters</name>
        <type>function</type>
        <docblock line="107">
          <description><![CDATA[getter for parameters]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="107" name="return" description="parameters" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="121" package="">
        <name>getParameterNames</name>
        <type>function</type>
        <docblock line="116">
          <description><![CDATA[getter for parameter names]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="116" name="return" description="parameter names" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="134" package="">
        <name>getParameterByPosition</name>
        <type>function</type>
        <docblock line="131">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="131" name="param" description="" type="int" variable="$position">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$position</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="149" package="">
        <name>setParameters</name>
        <type>function</type>
        <docblock line="143">
          <description><![CDATA[adder for parameters]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="143" name="param" description="of type Tx_PhpParser_Domain_Model_Class_MethodParameter" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="143" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="166" package="">
        <name>setParameter</name>
        <type>function</type>
        <docblock line="160">
          <description><![CDATA[setter for a single parameter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="160" name="param" description="" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="160" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="166">
          <name>$parameter</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="181" package="">
        <name>replaceParameter</name>
        <type>function</type>
        <docblock line="175">
          <description><![CDATA[replace a single parameter, depending on position]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="175" name="param" description="" type="array" variable="$parameter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="175" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="181">
          <name>$parameter</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="192" package="">
        <name>removeParameter</name>
        <type>function</type>
        <docblock line="185">
          <description><![CDATA[removes a parameter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="185" name="param" description="" type="" variable="$parameterName"/>
          <tag line="185" name="param" description="" type="" variable="$parameterPosition"/>
          <tag line="185" name="return" description="TRUE (if successfull removed)" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="192">
          <name>$parameterName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="192">
          <name>$parameterPosition</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="212" package="">
        <name>renameParameter</name>
        <type>function</type>
        <docblock line="204">
          <description><![CDATA[renameParameter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="204" name="param" description="" type="" variable="$oldName"/>
          <tag line="204" name="param" description="" type="" variable="$newName"/>
          <tag line="204" name="param" description="" type="" variable="$parameterPosition"/>
          <tag line="204" name="return" description="TRUE (if successfull removed)" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="212">
          <name>$oldName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="212">
          <name>$newName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="212">
          <name>$parameterPosition</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="230" package="">
        <name>getAnnotations</name>
        <type>function</type>
        <docblock line="225">
          <description><![CDATA[TODO: THe sorting of tags/annotations should be controlled]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="225" name="return" description="" type=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="248" package="">
        <name>updateParamTags</name>
        <type>function</type>
        <docblock line="245">
          <description><![CDATA[set param tags according to the existing parameters]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Domain/Model/AbstractObject.php" hash="a5f69864e1f129c293a0deb2a0977bae" package="PhpParserApi">
    <docblock line="27">
      <description><![CDATA[]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="27" name="author" description="Nico de Haen"/>
      <tag line="27" name="package" description="PhpParserApi"/>
      <tag line="27" name="license" description="http://www.gnu.org/licenses/gpl.html GNU General Public License, version 3 or later"/>
    </docblock>
    <parse_markers>
      <critical line="90" code="50019">No short description for property $docCommentParser</critical>
      <critical line="95" code="50019">No short description for property $namespace</critical>
      <critical line="101" code="50019">No short description for property $node</critical>
      <error line="107" code="50015">Argument $updateNodeName is missing from the Docblock of setName()</error>
      <error line="143" code="50012">No short description for method isPublic()</error>
      <error line="150" code="50012">No short description for method isProtected()</error>
      <error line="158" code="50012">No short description for method isPrivate()</error>
      <error line="165" code="50012">No short description for method isStatic()</error>
      <error line="172" code="50012">No short description for method isAbstract()</error>
      <error line="179" code="50012">No short description for method isFinal()</error>
      <error line="242" code="50012">No short description for method removeModifier()</error>
      <error line="251" code="50012">No short description for method removeAllModifiers()</error>
      <error line="279" code="50012">No short description for method setNode()</error>
      <error line="286" code="50012">No short description for method getNode()</error>
      <error line="383" code="50014">Name of argument $tagName does not match with the DocBlock's name $tagName: in isTaggedWith()</error>
      <notice line="383" code="50013">Parameter $tagName: could not be found in isTaggedWith()</notice>
      <error line="395" code="50015">Argument $tagName is missing from the Docblock of getTagValues()</error>
      <error line="425" code="50012">No short description for method addTag()</error>
      <error line="462" code="50012">No short description for method setDescription()</error>
      <error line="471" code="50012">No short description for method getDescription()</error>
      <error line="478" code="50012">No short description for method setNamespaceName()</error>
      <error line="486" code="50012">No short description for method getNamespaceName()</error>
      <error line="493" code="50012">No short description for method isNamespaced()</error>
      <error line="504" code="50012">No short description for method inNamespace()</error>
      <error line="539" code="50012">No short description for method getLine()</error>
      <critical line="27" code="50005">No short description for class Tx_PhpParser_Domain_Model_AbstractObject</critical>
      <critical line="27" code="50008">No short description for file Domain/Model/AbstractObject.php</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="34" package="PhpParserApi">
      <name>Tx_PhpParser_Domain_Model_AbstractObject</name>
      <full_name>\Tx_PhpParser_Domain_Model_AbstractObject</full_name>
      <extends/>
      <docblock line="27">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="27" name="author" description="Nico de Haen"/>
        <tag line="27" name="package" description="PhpParserApi"/>
        <tag line="27" name="license" description="http://www.gnu.org/licenses/gpl.html GNU General Public License, version 3 or later"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="46" package="Default">
        <name>$mapModifierNames</name>
        <default><![CDATA[array(
		'public'    => PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC,
		'protected' => PHPParser_Node_Stmt_Class::MODIFIER_PROTECTED,
		'private'   => PHPParser_Node_Stmt_Class::MODIFIER_PRIVATE,
		'static'    => PHPParser_Node_Stmt_Class::MODIFIER_STATIC,
		'abstract'  => PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT,
		'final'     => PHPParser_Node_Stmt_Class::MODIFIER_FINAL
	)]]></default>
        <docblock line="36">
          <description><![CDATA[const MODIFIER_PUBLIC    =  1;
 const MODIFIER_PROTECTED =  2;
 const MODIFIER_PRIVATE   =  4;
 const MODIFIER_STATIC    =  8;
 const MODIFIER_ABSTRACT  = 16;
 const MODIFIER_FINAL     = 32;]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="36" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="60" package="Default">
        <name>$description</name>
        <default><![CDATA[]]></default>
        <docblock line="55">
          <description><![CDATA[Description of property]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="67" package="Default">
        <name>$name</name>
        <default><![CDATA[]]></default>
        <docblock line="62">
          <description><![CDATA[name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="62" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="74" package="Default">
        <name>$modifiers</name>
        <default><![CDATA[array()]]></default>
        <docblock line="69">
          <description><![CDATA[array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="69" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="81" package="Default">
        <name>$tags</name>
        <default><![CDATA[array()]]></default>
        <docblock line="76">
          <description><![CDATA[array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="88" package="Default">
        <name>$docComment</name>
        <default><![CDATA[]]></default>
        <docblock line="83">
          <description><![CDATA[docComment]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="83" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="93" package="Default">
        <name>$docCommentParser</name>
        <default><![CDATA[]]></default>
        <docblock line="90">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="90" name="var" description="" type="\Tx_PhpParser_Parser_DocCommentParser">
            <type by_reference="false">\Tx_PhpParser_Parser_DocCommentParser</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="98" package="Default">
        <name>$namespace</name>
        <default><![CDATA[]]></default>
        <docblock line="95">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="95" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="104" package="Default">
        <name>$node</name>
        <default><![CDATA[]]></default>
        <docblock line="101">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="101" name="var" description="" type="\PHPParser_Node">
            <type by_reference="false">\PHPParser_Node</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="113" package="">
        <name>setName</name>
        <type>function</type>
        <docblock line="107">
          <description><![CDATA[Setter for name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="107" name="param" description="name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="107" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="113">
          <name>$updateNodeName</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="126" package="">
        <name>getName</name>
        <type>function</type>
        <docblock line="121">
          <description><![CDATA[Getter for name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="121" name="return" description="name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="139" package="">
        <name>getShortName</name>
        <type>function</type>
        <docblock line="134">
          <description><![CDATA[Getter for short name (without namespace]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="134" name="return" description="name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="146" package="">
        <name>isPublic</name>
        <type>function</type>
        <docblock line="143">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="143" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="154" package="">
        <name>isProtected</name>
        <type>function</type>
        <docblock line="150">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="150" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="161" package="">
        <name>isPrivate</name>
        <type>function</type>
        <docblock line="158">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="158" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="168" package="">
        <name>isStatic</name>
        <type>function</type>
        <docblock line="165">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="165" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="175" package="">
        <name>isAbstract</name>
        <type>function</type>
        <docblock line="172">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="172" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="182" package="">
        <name>isFinal</name>
        <type>function</type>
        <docblock line="179">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="179" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="193" package="">
        <name>setModifiers</name>
        <type>function</type>
        <docblock line="186">
          <description><![CDATA[Setter for modifiers (will set all modifiers at once,
since modifiers are claculated bitwise)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="186" name="param" description="modifiers" type="int" variable="$modifiers">
            <type by_reference="false">int</type>
          </tag>
          <tag line="186" name="return" description="(for fluid interface)" type="\Tx_PhpParser_Domain_Model_AbstractObject">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_AbstractObject</type>
          </tag>
        </docblock>
        <argument line="193">
          <name>$modifiers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="204" package="">
        <name>addModifier</name>
        <type>function</type>
        <docblock line="198">
          <description><![CDATA[adds a modifier]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="198" name="param" description="" type="string" variable="$modifierName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="198" name="return" description="(for fluid interface)" type="\Tx_PhpParser_Domain_Model_AbstractObject">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_AbstractObject</type>
          </tag>
        </docblock>
        <argument line="204">
          <name>$modifierName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="223" package="">
        <name>setModifier</name>
        <type>function</type>
        <docblock line="214">
          <description><![CDATA[Use this method to set an accessor modifier,
it will care for removing existing ones to avoid syntax errors]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="214" name="param" description="" type="string" variable="$modifierName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="214" name="throws" description="" type="\Tx_PhpParser_Exception_SyntaxErrorException">
            <type by_reference="false">\Tx_PhpParser_Exception_SyntaxErrorException</type>
          </tag>
          <tag line="214" name="return" description="(for fluid interface)" type="\Tx_PhpParser_Domain_Model_AbstractObject">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_AbstractObject</type>
          </tag>
        </docblock>
        <argument line="223">
          <name>$modifierName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="246" package="">
        <name>removeModifier</name>
        <type>function</type>
        <docblock line="242">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="242" name="param" description="" type="string" variable="$modifierName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="242" name="return" description="(for fluid interface)" type="\Tx_PhpParser_Domain_Model_AbstractObject">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_AbstractObject</type>
          </tag>
        </docblock>
        <argument line="246">
          <name>$modifierName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="254" package="">
        <name>removeAllModifiers</name>
        <type>function</type>
        <docblock line="251">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="251" name="return" description="(for fluid interface)" type="\Tx_PhpParser_Domain_Model_AbstractObject">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_AbstractObject</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="265" package="">
        <name>getModifiers</name>
        <type>function</type>
        <docblock line="260">
          <description><![CDATA[Getter for modifiers]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="260" name="return" description="modifiers" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="274" package="">
        <name>getModifierNames</name>
        <type>function</type>
        <docblock line="269">
          <description><![CDATA[getModifierNames]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="269" name="return" description="" type=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="282" package="">
        <name>setNode</name>
        <type>function</type>
        <docblock line="279">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="279" name="param" description="" type="\PHPParser_Node" variable="$node">
            <type by_reference="false">\PHPParser_Node</type>
          </tag>
        </docblock>
        <argument line="282">
          <name>$node</name>
          <default><![CDATA[]]></default>
          <type>PHPParser_Node</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="289" package="">
        <name>getNode</name>
        <type>function</type>
        <docblock line="286">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="286" name="return" description="" type="\PHPParser_Node">
            <type by_reference="false">\PHPParser_Node</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="297" package="">
        <name>initDocComment</name>
        <type>function</type>
        <docblock line="293">
          <description><![CDATA[for internal use only]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="293" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="324" package="">
        <name>updateDocComment</name>
        <type>function</type>
        <docblock line="321">
          <description><![CDATA[for internal use]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="346" package="">
        <name>setDocComment</name>
        <type>function</type>
        <docblock line="339">
          <description><![CDATA[Setter for docComment]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="339" name="param" description="docComment" type="string" variable="$docComment">
            <type by_reference="false">string</type>
          </tag>
          <tag line="339" name="param" description="" type="boolean" variable="$updateNodeDocComment">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="339" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="346">
          <name>$docComment</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="346">
          <name>$updateNodeDocComment</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="367" package="">
        <name>getDocComment</name>
        <type>function</type>
        <docblock line="362">
          <description><![CDATA[Getter for docComment]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="362" name="return" description="docComment" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="376" package="">
        <name>hasDocComment</name>
        <type>function</type>
        <docblock line="371">
          <description><![CDATA[is there a docComment]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="371" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="390" package="">
        <name>isTaggedWith</name>
        <type>function</type>
        <docblock line="383">
          <description><![CDATA[Checks if the doc comment of this method is tagged with
the specified tag]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="383" name="param" description="Tag name to check for" type="string" variable="$tagName:">
            <type by_reference="false">string</type>
          </tag>
          <tag line="383" name="return" description="TRUE if such a tag has been defined, otherwise FALSE" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="390">
          <name>$tagName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="399" package="">
        <name>getTagValues</name>
        <type>function</type>
        <docblock line="395">
          <description><![CDATA[Returns the values of the specified tag]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="395" name="return" description="Values of the given tag" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="399">
          <name>$tagName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="408" package="">
        <name>getTags</name>
        <type>function</type>
        <docblock line="403">
          <description><![CDATA[Returns an array of tags and their values]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="403" name="return" description="Tags and values" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="419" package="">
        <name>setTag</name>
        <type>function</type>
        <docblock line="412">
          <description><![CDATA[sets a tags]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="412" name="param" description="" type="string" variable="$tagName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="412" name="param" description="" type="mixed" variable="$tagValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="412" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="419">
          <name>$tagName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="419">
          <name>$tagValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="431" package="">
        <name>addTag</name>
        <type>function</type>
        <docblock line="425">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="425" name="param" description="" type="" variable="$tagName"/>
          <tag line="425" name="param" description="" type="" variable="$tagValue"/>
          <tag line="425" name="return" description="" type="\Tx_PhpParser_Domain_Model_AbstractObject">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_AbstractObject</type>
          </tag>
        </docblock>
        <argument line="431">
          <name>$tagName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="431">
          <name>$tagValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="449" package="">
        <name>removeTag</name>
        <type>function</type>
        <docblock line="441">
          <description><![CDATA[unsets a tag]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="441" name="param" description="" type="string" variable="$tagName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="441" name="param" description="of the tag to be removed (if second parameter is not set, all tags with that name will be removed)" type="mixed" variable="$tagValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="441" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="449">
          <name>$tagName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="449">
          <name>$tagValue</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="465" package="">
        <name>setDescription</name>
        <type>function</type>
        <docblock line="462">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="462" name="param" description="" type="string" variable="$description">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="465">
          <name>$description</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="474" package="">
        <name>getDescription</name>
        <type>function</type>
        <docblock line="471">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="471" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="481" package="">
        <name>setNamespaceName</name>
        <type>function</type>
        <docblock line="478">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="478" name="param" description="" type="string" variable="$namespace">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="481">
          <name>$namespace</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="489" package="">
        <name>getNamespaceName</name>
        <type>function</type>
        <docblock line="486">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="486" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="496" package="">
        <name>isNamespaced</name>
        <type>function</type>
        <docblock line="493">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="493" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="508" package="">
        <name>inNamespace</name>
        <type>function</type>
        <docblock line="504">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="504" name="param" description="" type="" variable="$namespace"/>
          <tag line="504" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="508">
          <name>$namespace</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="520" package="">
        <name>validateModifier</name>
        <type>function</type>
        <docblock line="514">
          <description><![CDATA[validate if the modifier can be added to the current modifiers or not]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="514" name="param" description="" type="" variable="$modifier"/>
          <tag line="514" name="throws" description="" type="\Tx_PhpParser_Exception_SyntaxErrorException">
            <type by_reference="false">\Tx_PhpParser_Exception_SyntaxErrorException</type>
          </tag>
        </docblock>
        <argument line="520">
          <name>$modifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="542" package="">
        <name>getLine</name>
        <type>function</type>
        <docblock line="539">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="539" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Domain/Model/File.php" hash="129a38ccc182114c38b98c7b259d878b" package="PhpParserApi">
    <docblock line="27">
      <description><![CDATA[]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="27" name="author" description="Nico de Haen"/>
      <tag line="27" name="package" description="PhpParserApi"/>
      <tag line="27" name="license" description="http://www.gnu.org/licenses/gpl.html GNU General Public License, version 3 or later"/>
    </docblock>
    <parse_markers>
      <error line="36" code="50018">No DocBlock was found for property $filePathAndName</error>
      <critical line="38" code="50019">No short description for property $namespaces</critical>
      <critical line="44" code="50019">No short description for property $stmts</critical>
      <critical line="49" code="50019">No short description for property $aliasDeclarations</critical>
      <critical line="54" code="50019">No short description for property $functions</critical>
      <error line="59" code="50012">No short description for method addClass()</error>
      <error line="66" code="50012">No short description for method getClassByName()</error>
      <error line="78" code="50012">No short description for method getClasses()</error>
      <error line="90" code="50012">No short description for method addNamespace()</error>
      <error line="97" code="50012">No short description for method getNamespaces()</error>
      <error line="104" code="50010">No DocBlock was found for method hasNamespaces()</error>
      <error line="109" code="50012">No short description for method setFilePathAndName()</error>
      <error line="116" code="50012">No short description for method getFilePathAndName()</error>
      <error line="123" code="50012">No short description for method getStmts()</error>
      <error line="142" code="50012">No short description for method addSubStatements()</error>
      <error line="164" code="50012">No short description for method addAliasDeclarations()</error>
      <error line="171" code="50012">No short description for method getAliasDeclarations()</error>
      <critical line="27" code="50005">No short description for class Tx_PhpParser_Domain_Model_File</critical>
      <critical line="27" code="50008">No short description for file Domain/Model/File.php</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="34" package="PhpParserApi">
      <name>Tx_PhpParser_Domain_Model_File</name>
      <full_name>\Tx_PhpParser_Domain_Model_File</full_name>
      <extends>\Tx_PhpParser_Domain_Model_Container</extends>
      <docblock line="27">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="27" name="author" description="Nico de Haen"/>
        <tag line="27" name="package" description="PhpParserApi"/>
        <tag line="27" name="license" description="http://www.gnu.org/licenses/gpl.html GNU General Public License, version 3 or later"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="36" package="Default">
        <name>$filePathAndName</name>
        <default><![CDATA['']]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="41" package="Default">
        <name>$namespaces</name>
        <default><![CDATA[array()]]></default>
        <docblock line="38">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="of Tx_PhpParser_Domain_Model_Namespace" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="47" package="Default">
        <name>$stmts</name>
        <default><![CDATA[array()]]></default>
        <docblock line="44">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="all statements" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" package="Default">
        <name>$aliasDeclarations</name>
        <default><![CDATA[array()]]></default>
        <docblock line="49">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="49" name="var" description="with PHPParser_Node_Stmts !!" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="57" package="Default">
        <name>$functions</name>
        <default><![CDATA[array()]]></default>
        <docblock line="54">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="var" description="Tx_PhpParser_Domain_Model_Function" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="62" package="">
        <name>addClass</name>
        <type>function</type>
        <docblock line="59">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="59" name="param" description="" type="\Tx_PhpParser_Domain_Model_Class" variable="$class">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_Class</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type>Tx_PhpParser_Domain_Model_Class</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="70" package="">
        <name>getClassByName</name>
        <type>function</type>
        <docblock line="66">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="66" name="param" description="" type="string" variable="$className">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="return" description="" type="\Tx_PhpParser_Domain_Model_Class">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_Class</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$className</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="81" package="">
        <name>getClasses</name>
        <type>function</type>
        <docblock line="78">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="78" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="93" package="">
        <name>addNamespace</name>
        <type>function</type>
        <docblock line="90">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="90" name="param" description="" type="\Tx_PhpParser_Domain_Model_Namespace" variable="$namespace">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_Namespace</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$namespace</name>
          <default><![CDATA[]]></default>
          <type>Tx_PhpParser_Domain_Model_Namespace</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="100" package="">
        <name>getNamespaces</name>
        <type>function</type>
        <docblock line="97">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="97" name="return" description="Tx_PhpParser_Domain_Model_Namespace" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="104" package="">
        <name>hasNamespaces</name>
        <type>function</type>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="112" package="">
        <name>setFilePathAndName</name>
        <type>function</type>
        <docblock line="109">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="109" name="param" description="" type="string" variable="$filePathAndName">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="112">
          <name>$filePathAndName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="119" package="">
        <name>getFilePathAndName</name>
        <type>function</type>
        <docblock line="116">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="116" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="126" package="">
        <name>getStmts</name>
        <type>function</type>
        <docblock line="123">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="123" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="145" package="">
        <name>addSubStatements</name>
        <type>function</type>
        <docblock line="142">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="142" name="param" description="either a file object or a namespace object" type="\$parentObject" variable="$parentObject">
            <type by_reference="false">\$parentObject</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$parentObject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="167" package="">
        <name>addAliasDeclarations</name>
        <type>function</type>
        <docblock line="164">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="164" name="param" description="PHPParser_Node_Stmt" type="array" variable="$aliasDeclarations">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="167">
          <name>$aliasDeclarations</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="174" package="">
        <name>getAliasDeclarations</name>
        <type>function</type>
        <docblock line="171">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="171" name="return" description="PHPParser_Node_Stmt" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Domain/Model/Container.php" hash="56d8e86b75fade41187f5a3bbbfc13b9" package="PhpParserApi">
    <docblock line="26">
      <description><![CDATA[Provides methods that are common to Class, File and Namespace objects]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="26" name="package" description="PhpParserApi"/>
      <tag line="26" name="author" description="Nico de Haen"/>
    </docblock>
    <parse_markers>
      <critical line="42" code="50019">No short description for property $preIncludes</critical>
      <critical line="47" code="50019">No short description for property $postIncludes</critical>
      <critical line="52" code="50019">No short description for property $functions</critical>
      <critical line="73" code="50019">No short description for property $classes</critical>
      <error line="79" code="50012">No short description for method getFirstClass()</error>
      <error line="88" code="50012">No short description for method addClass()</error>
      <error line="95" code="50012">No short description for method setClasses()</error>
      <error line="103" code="50012">No short description for method getClasses()</error>
      <error line="160" code="50010">No DocBlock was found for method addPostInclude()</error>
      <error line="164" code="50010">No DocBlock was found for method getPostIncludes()</error>
      <error line="168" code="50010">No DocBlock was found for method addPreInclude()</error>
      <error line="172" code="50010">No DocBlock was found for method getPreIncludes()</error>
      <error line="176" code="50012">No short description for method setFunctions()</error>
      <error line="183" code="50012">No short description for method addFunction()</error>
      <error line="190" code="50012">No short description for method getFunctions()</error>
      <error line="197" code="50012">No short description for method getFunction()</error>
      <error line="209" code="50012">No short description for method addPostClassStatements()</error>
      <error line="216" code="50012">No short description for method getPostClassStatements()</error>
      <error line="223" code="50012">No short description for method addPreClassStatements()</error>
      <error line="230" code="50012">No short description for method getPreClassStatements()</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="33" package="PhpParserApi">
      <name>Tx_PhpParser_Domain_Model_Container</name>
      <full_name>\Tx_PhpParser_Domain_Model_Container</full_name>
      <extends>\Tx_PhpParser_Domain_Model_AbstractObject</extends>
      <docblock line="26">
        <description><![CDATA[Provides methods that are common to Class, File and Namespace objects]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="package" description="PhpParserApi"/>
        <tag line="26" name="author" description="Nico de Haen"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="40" package="Default">
        <name>$constants</name>
        <default><![CDATA[array()]]></default>
        <docblock line="35">
          <description><![CDATA[constants]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="35" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$preIncludes</name>
        <default><![CDATA[array()]]></default>
        <docblock line="42">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="50" package="Default">
        <name>$postIncludes</name>
        <default><![CDATA[array()]]></default>
        <docblock line="47">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="55" package="Default">
        <name>$functions</name>
        <default><![CDATA[array()]]></default>
        <docblock line="52">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="52" name="var" description="Tx_PhpParser_Domain_Model_Function" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="62" package="Default">
        <name>$preClassStatements</name>
        <default><![CDATA[array()]]></default>
        <docblock line="57">
          <description><![CDATA[contains all statements that occurred before the first class statement]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="70" package="Default">
        <name>$postClassStatements</name>
        <default><![CDATA[array()]]></default>
        <docblock line="64">
          <description><![CDATA[contains all statements that occurred after the first class statement
they will be rewritten after the last class!!]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="64" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="76" package="Default">
        <name>$classes</name>
        <default><![CDATA[array()]]></default>
        <docblock line="73">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="73" name="var" description="Tx_PhpParser_Domain_Model_Class" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="82" package="">
        <name>getFirstClass</name>
        <type>function</type>
        <docblock line="79">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="79" name="return" description="" type="\Tx_PhpParser_Domain_Model_Class">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_Class</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="91" package="">
        <name>addClass</name>
        <type>function</type>
        <docblock line="88">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="88" name="param" description="" type="\Tx_PhpParser_Domain_Model_Class" variable="$class">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_Class</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type>Tx_PhpParser_Domain_Model_Class</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="98" package="">
        <name>setClasses</name>
        <type>function</type>
        <docblock line="95">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="95" name="param" description="" type="array" variable="$classes">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$classes</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="106" package="">
        <name>getClasses</name>
        <type>function</type>
        <docblock line="103">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="103" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="118" package="">
        <name>setConstant</name>
        <type>function</type>
        <docblock line="111">
          <description><![CDATA[Setter for a single constant]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="111" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="111" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="118">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="118">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="129" package="">
        <name>getConstants</name>
        <type>function</type>
        <docblock line="124">
          <description><![CDATA[Getter for constants]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="124" name="return" description="constants" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="139" package="">
        <name>getConstant</name>
        <type>function</type>
        <docblock line="133">
          <description><![CDATA[Getter for a single constant]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="133" name="param" description="" type="" variable="$constantName"/>
          <tag line="133" name="return" description="constant value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="139">
          <name>$constantName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="152" package="">
        <name>removeConstant</name>
        <type>function</type>
        <docblock line="146">
          <description><![CDATA[removes a constant]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="146" name="param" description="" type="string" variable="$constantName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="146" name="return" description="TRUE (if successfull removed)" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="152">
          <name>$constantName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="160" package="">
        <name>addPostInclude</name>
        <type>function</type>
        <argument line="160">
          <name>$postInclude</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="164" package="">
        <name>getPostIncludes</name>
        <type>function</type>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="168" package="">
        <name>addPreInclude</name>
        <type>function</type>
        <argument line="168">
          <name>$preInclude</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="172" package="">
        <name>getPreIncludes</name>
        <type>function</type>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="179" package="">
        <name>setFunctions</name>
        <type>function</type>
        <docblock line="176">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="176" name="param" description="" type="array" variable="$functions">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$functions</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="186" package="">
        <name>addFunction</name>
        <type>function</type>
        <docblock line="183">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="183" name="param" description="" type="\Tx_PhpParser_Domain_Model_Function" variable="$function">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_Function</type>
          </tag>
        </docblock>
        <argument line="186">
          <name>$function</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="193" package="">
        <name>getFunctions</name>
        <type>function</type>
        <docblock line="190">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="190" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="201" package="">
        <name>getFunction</name>
        <type>function</type>
        <docblock line="197">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="197" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="197" name="return" description="" type="\Tx_PhpParser_Domain_Model_Function">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_Function</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="212" package="">
        <name>addPostClassStatements</name>
        <type>function</type>
        <docblock line="209">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="209" name="param" description="" type="array" variable="$postClassStatements">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="212">
          <name>$postClassStatements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="219" package="">
        <name>getPostClassStatements</name>
        <type>function</type>
        <docblock line="216">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="216" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="226" package="">
        <name>addPreClassStatements</name>
        <type>function</type>
        <docblock line="223">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="223" name="param" description="" type="array" variable="$preClassStatements">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="226">
          <name>$preClassStatements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="233" package="">
        <name>getPreClassStatements</name>
        <type>function</type>
        <docblock line="230">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="230" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Domain/Model/Namespace.php" hash="23de423cb722a9691e76e8bc3aad0b45" package="PhpParserApi">
    <docblock line="27">
      <description><![CDATA[]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="27" name="author" description="Nico de Haen"/>
      <tag line="27" name="package" description="PhpParserApi"/>
      <tag line="27" name="license" description="http://www.gnu.org/licenses/gpl.html GNU General Public License, version 3 or later"/>
    </docblock>
    <markers>
      <todo line="80"/>
    </markers>
    <parse_markers>
      <error line="36" code="50018">No DocBlock was found for property $constants</error>
      <critical line="38" code="50019">No short description for property $aliasDeclarations</critical>
      <critical line="44" code="50019">No short description for property $classes</critical>
      <error line="49" code="50018">No DocBlock was found for property $functions</error>
      <error line="51" code="50012">No short description for method __construct()</error>
      <error line="63" code="50010">No DocBlock was found for method setFunctions()</error>
      <error line="67" code="50010">No DocBlock was found for method getFunctions()</error>
      <error line="71" code="50010">No DocBlock was found for method addAliasDeclaration()</error>
      <error line="75" code="50010">No DocBlock was found for method getAliasDeclarations()</error>
      <error line="79" code="50010">No DocBlock was found for method getAliasNames()</error>
      <error line="83" code="50012">No short description for method setPreIncludes()</error>
      <error line="90" code="50012">No short description for method getPreIncludes()</error>
      <error line="97" code="50010">No DocBlock was found for method addPreInclude()</error>
      <error line="101" code="50010">No DocBlock was found for method setPostIncludes()</error>
      <error line="105" code="50010">No DocBlock was found for method getPostIncludes()</error>
      <error line="110" code="50010">No DocBlock was found for method addPostInclude()</error>
      <critical line="27" code="50005">No short description for class Tx_PhpParser_Domain_Model_Namespace</critical>
      <critical line="27" code="50008">No short description for file Domain/Model/Namespace.php</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="34" package="PhpParserApi">
      <name>Tx_PhpParser_Domain_Model_Namespace</name>
      <full_name>\Tx_PhpParser_Domain_Model_Namespace</full_name>
      <extends>\Tx_PhpParser_Domain_Model_Container</extends>
      <docblock line="27">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="27" name="author" description="Nico de Haen"/>
        <tag line="27" name="package" description="PhpParserApi"/>
        <tag line="27" name="license" description="http://www.gnu.org/licenses/gpl.html GNU General Public License, version 3 or later"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="36" package="Default">
        <name>$constants</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="41" package="Default">
        <name>$aliasDeclarations</name>
        <default><![CDATA[]]></default>
        <docblock line="38">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="with nodes" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="47" package="Default">
        <name>$classes</name>
        <default><![CDATA[array()]]></default>
        <docblock line="44">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="Tx_PhpParser_Domain_Model_Class" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="49" package="Default">
        <name>$functions</name>
        <default><![CDATA[]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="55" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="51">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="51" name="param" description="boolean" type="" variable="$createNode"/>
        </docblock>
        <argument line="55">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="55">
          <name>$createNode</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="63" package="">
        <name>setFunctions</name>
        <type>function</type>
        <argument line="63">
          <name>$functions</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="67" package="">
        <name>getFunctions</name>
        <type>function</type>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="71" package="">
        <name>addAliasDeclaration</name>
        <type>function</type>
        <argument line="71">
          <name>$aliasDeclaration</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="75" package="">
        <name>getAliasDeclarations</name>
        <type>function</type>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="79" package="">
        <name>getAliasNames</name>
        <type>function</type>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="86" package="">
        <name>setPreIncludes</name>
        <type>function</type>
        <docblock line="83">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="83" name="param" description="" type="array" variable="$preIncludes">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="86">
          <name>$preIncludes</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="93" package="">
        <name>getPreIncludes</name>
        <type>function</type>
        <docblock line="90">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="90" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="97" package="">
        <name>addPreInclude</name>
        <type>function</type>
        <argument line="97">
          <name>$preInclude</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="101" package="">
        <name>setPostIncludes</name>
        <type>function</type>
        <argument line="101">
          <name>$postIncludes</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="105" package="">
        <name>getPostIncludes</name>
        <type>function</type>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="110" package="">
        <name>addPostInclude</name>
        <type>function</type>
        <argument line="110">
          <name>$postInclude</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Domain/Model/Class.php" hash="90c48ba39a1eb2e5cbe28c86bc20c642" package="PhpParserApi">
    <docblock line="27">
      <description><![CDATA[TODO: enable declares]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="27" name="author" description="Nico de Haen"/>
      <tag line="27" name="package" description="PhpParserApi"/>
      <tag line="27" name="license" description="http://www.gnu.org/licenses/gpl.html GNU General Public License, version 3 or later"/>
    </docblock>
    <parse_markers>
      <error line="69" code="50014">Name of argument $name does not match with the DocBlock's name $createNode in __construct()</error>
      <error line="69" code="50014">Name of argument $createNode does not match with the DocBlock's name $name in __construct()</error>
      <error line="113" code="50014">Name of argument $classMethod does not match with the DocBlock's name $method in setMethod()</error>
      <notice line="113" code="50013">Parameter $method could not be found in setMethod()</notice>
      <error line="346" code="50012">No short description for method setInterfaces()</error>
      <error line="359" code="50015">Argument $updateNode is missing from the Docblock of addInterfaceName()</error>
      <error line="386" code="50012">No short description for method hasInterface()</error>
      <error line="394" code="50012">No short description for method removeInterface()</error>
      <error line="410" code="50010">No DocBlock was found for method removeAllInterfaces()</error>
      <error line="483" code="50012">No short description for method addModifier()</error>
      <error line="496" code="50012">No short description for method setModifier()</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="35" package="PhpParserApi">
      <name>Tx_PhpParser_Domain_Model_Class</name>
      <full_name>\Tx_PhpParser_Domain_Model_Class</full_name>
      <extends>\Tx_PhpParser_Domain_Model_Container</extends>
      <docblock line="27">
        <description><![CDATA[TODO: enable declares]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="27" name="author" description="Nico de Haen"/>
        <tag line="27" name="package" description="PhpParserApi"/>
        <tag line="27" name="license" description="http://www.gnu.org/licenses/gpl.html GNU General Public License, version 3 or later"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="43" package="Default">
        <name>$interfaceNames</name>
        <default><![CDATA[array()]]></default>
        <docblock line="38">
          <description><![CDATA[interfaces]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="of string" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="51" package="Default">
        <name>$methods</name>
        <default><![CDATA[array()]]></default>
        <docblock line="46">
          <description><![CDATA[methods]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="59" package="Default">
        <name>$parentClassName</name>
        <default><![CDATA['']]></default>
        <docblock line="54">
          <description><![CDATA[parentClassName]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="var" description="parentClassName" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="66" package="Default">
        <name>$properties</name>
        <default><![CDATA[array()]]></default>
        <docblock line="61">
          <description><![CDATA[properties]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="76" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="69">
          <description><![CDATA[constructor of this class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="69" name="param" description="" type="boolean" variable="$createNode">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="69" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="return" description="" type="\unknown_type">
            <type by_reference="false">\unknown_type</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$createNode</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="91" package="">
        <name>methodExists</name>
        <type>function</type>
        <docblock line="85">
          <description><![CDATA[methodExists]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="85" name="param" description="" type="" variable="$methodName"/>
          <tag line="85" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$methodName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="108" package="">
        <name>setMethods</name>
        <type>function</type>
        <docblock line="102">
          <description><![CDATA[Setter for methods]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="102" name="param" description="(Tx_PhpParser_Domain_Model_Class_Method[])" type="array" variable="$methods">
            <type by_reference="false">array</type>
          </tag>
          <tag line="102" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$methods</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="119" package="">
        <name>setMethod</name>
        <type>function</type>
        <docblock line="113">
          <description><![CDATA[Setter for a single method (allows to override an existing method)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="113" name="param" description="" type="\Tx_PhpParser_Domain_Model_Class_Method" variable="$method">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_Class_Method</type>
          </tag>
          <tag line="113" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="119">
          <name>$classMethod</name>
          <default><![CDATA[]]></default>
          <type>Tx_PhpParser_Domain_Model_Class_Method</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="129" package="">
        <name>getMethods</name>
        <type>function</type>
        <docblock line="124">
          <description><![CDATA[Getter for methods]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="124" name="return" description="" type="\Tx_PhpParser_Domain_Model_Class_Method[]">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_Class_Method[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="139" package="">
        <name>getMethod</name>
        <type>function</type>
        <docblock line="133">
          <description><![CDATA[Getter for method]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="133" name="param" description="" type="" variable="$methodName"/>
          <tag line="133" name="return" description="" type="\Tx_PhpParser_Domain_Model_Class_Method">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_Class_Method</type>
          </tag>
        </docblock>
        <argument line="139">
          <name>$methodName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="152" package="">
        <name>addMethod</name>
        <type>function</type>
        <docblock line="146">
          <description><![CDATA[Add a method]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="146" name="param" description="" type="\Tx_PhpParser_Domain_Model_Class_Method" variable="$classMethod">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_Class_Method</type>
          </tag>
          <tag line="146" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="152">
          <name>$classMethod</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="165" package="">
        <name>removeMethod</name>
        <type>function</type>
        <docblock line="159">
          <description><![CDATA[removes a method]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="159" name="param" description="" type="string" variable="$methodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="159" name="return" description="TRUE (if successfull removed)" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="165">
          <name>$methodName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="180" package="">
        <name>renameMethod</name>
        <type>function</type>
        <docblock line="173">
          <description><![CDATA[rename a method]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="173" name="param" description="" type="string" variable="$oldName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="173" name="param" description="" type="string" variable="$newName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="173" name="return" description="success" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="180">
          <name>$oldName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="180">
          <name>$newName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="196" package="">
        <name>getGetters</name>
        <type>function</type>
        <docblock line="191">
          <description><![CDATA[returns all methods starting with "get"]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="191" name="return" description="" type="\Tx_PhpParser_Domain_Model_Class_Method[]">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_Class_Method[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="216" package="">
        <name>getSetters</name>
        <type>function</type>
        <docblock line="211">
          <description><![CDATA[returnes all methods starting with "set"]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="211" name="return" description="" type="\Tx_PhpParser_Domain_Model_Class_Method[]">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_Class_Method[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="236" package="">
        <name>getProperty</name>
        <type>function</type>
        <docblock line="230">
          <description><![CDATA[Getter for property]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="230" name="param" description="the name of the property" type="string" variable="$propertyName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="230" name="return" description="" type="\Tx_PhpParser_Reflection_PropertyReflection">
            <type by_reference="false">\Tx_PhpParser_Reflection_PropertyReflection</type>
          </tag>
        </docblock>
        <argument line="236">
          <name>$propertyName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="249" package="">
        <name>setProperties</name>
        <type>function</type>
        <docblock line="243">
          <description><![CDATA[Setter for properties]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="243" name="param" description="properties" type="\select" variable="$properties">
            <type by_reference="false">\select</type>
          </tag>
          <tag line="243" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="249">
          <name>$properties</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="259" package="">
        <name>getProperties</name>
        <type>function</type>
        <docblock line="254">
          <description><![CDATA[Getter for properties]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="254" name="return" description="" type="\Tx_PhpParser_Domain_Model_Class_Property[]">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_Class_Property[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="269" package="">
        <name>removeProperty</name>
        <type>function</type>
        <docblock line="263">
          <description><![CDATA[removes a property]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="263" name="param" description="" type="string" variable="$propertyName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="263" name="return" description="TRUE (if successfull removed)" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="269">
          <name>$propertyName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="284" package="">
        <name>renameProperty</name>
        <type>function</type>
        <docblock line="277">
          <description><![CDATA[rename a property]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="277" name="param" description="" type="string" variable="$oldName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="277" name="param" description="" type="string" variable="$newName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="277" name="return" description="success" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="284">
          <name>$oldName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="284">
          <name>$newName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="301" package="">
        <name>propertyExists</name>
        <type>function</type>
        <docblock line="295">
          <description><![CDATA[propertyExists]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="295" name="param" description="" type="string" variable="$propertyName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="295" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="301">
          <name>$propertyName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="317" package="">
        <name>addProperty</name>
        <type>function</type>
        <docblock line="311">
          <description><![CDATA[add a property (returns TRUE if successfull added)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="311" name="param" description="" type="\Tx_PhpParser_Domain_Model_Class_Property" variable="$classProperty">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_Class_Property</type>
          </tag>
          <tag line="311" name="return" description="success" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="317">
          <name>$classProperty</name>
          <default><![CDATA[]]></default>
          <type>Tx_PhpParser_Domain_Model_Class_Property</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="331" package="">
        <name>getPropertyNames</name>
        <type>function</type>
        <docblock line="326">
          <description><![CDATA[returns all property names]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="326" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="341" package="">
        <name>setProperty</name>
        <type>function</type>
        <docblock line="335">
          <description><![CDATA[Setter for property]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="335" name="param" description="Tx_PhpParser_Domain_Model_Class_Property" type="" variable="$classProperty"/>
          <tag line="335" name="return" description="success" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="341">
          <name>$classProperty</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="349" package="">
        <name>setInterfaces</name>
        <type>function</type>
        <docblock line="346">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="346" name="param" description="of strings $interfaceNames" type="array" variable="$interfaceNames">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="349">
          <name>$interfaceNames</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="364" package="">
        <name>addInterfaceName</name>
        <type>function</type>
        <docblock line="359">
          <description><![CDATA[Adds a interface node, based on a string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="359" name="param" description="" type="string" variable="$interfaceName">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="364">
          <name>$interfaceName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="364">
          <name>$updateNode</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="382" package="">
        <name>getInterfaceNames</name>
        <type>function</type>
        <docblock line="377">
          <description><![CDATA[Getter for interfaces]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="377" name="return" description="interfaces" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="390" package="">
        <name>hasInterface</name>
        <type>function</type>
        <docblock line="386">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="386" name="param" description="" type="string" variable="$interfaceName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="386" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="390">
          <name>$interfaceName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="397" package="">
        <name>removeInterface</name>
        <type>function</type>
        <docblock line="394">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="394" name="param" description="" type="" variable="$interfaceNameToRemove"/>
        </docblock>
        <argument line="397">
          <name>$interfaceNameToRemove</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="410" package="">
        <name>removeAllInterfaces</name>
        <type>function</type>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="422" package="">
        <name>setParentClassName</name>
        <type>function</type>
        <docblock line="415">
          <description><![CDATA[Setter for parentClassName]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="415" name="param" description="" type="string" variable="$parentClassName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="415" name="param" description="" type="boolean" variable="$updateNode">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="415" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="422">
          <name>$parentClassName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="422">
          <name>$updateNode</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="435" package="">
        <name>getParentClassName</name>
        <type>function</type>
        <docblock line="430">
          <description><![CDATA[Getter for parentClass]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="430" name="return" description="parentClass" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="442" package="">
        <name>removeParentClassName</name>
        <type>function</type>
        <docblock line="439">
          <description><![CDATA[removes the parent class]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="451" package="">
        <name>updateStmts</name>
        <type>function</type>
        <docblock line="447">
          <description><![CDATA[This methods is respsible for generating a statement array in the correct
order and to include all method and property nodes]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="488" package="">
        <name>addModifier</name>
        <type>function</type>
        <docblock line="483">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="483" name="param" description="" type="string" variable="$modifierName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="483" name="return" description="(for fluid interface)" type="\Tx_PhpParser_Domain_Model_AbstractObject">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_AbstractObject</type>
          </tag>
          <tag line="483" name="throws" description="" type="\Tx_PhpParser_Exception_SyntaxErrorException">
            <type by_reference="false">\Tx_PhpParser_Exception_SyntaxErrorException</type>
          </tag>
        </docblock>
        <argument line="488">
          <name>$modifierName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="501" package="">
        <name>setModifier</name>
        <type>function</type>
        <docblock line="496">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="496" name="param" description="" type="string" variable="$modifierName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="496" name="return" description="(for fluid interface)" type="\Tx_PhpParser_Domain_Model_AbstractObject">
            <type by_reference="false">\Tx_PhpParser_Domain_Model_AbstractObject</type>
          </tag>
          <tag line="496" name="throws" description="" type="\Tx_PhpParser_Exception_SyntaxErrorException">
            <type by_reference="false">\Tx_PhpParser_Exception_SyntaxErrorException</type>
          </tag>
        </docblock>
        <argument line="501">
          <name>$modifierName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <package name="" full_name=""/>
  <package name="Default" full_name="Default"/>
  <package name="PhpParserApi" full_name="PhpParserApi"/>
  <namespace name="default" full_name="default"/>
  <marker count="2">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
