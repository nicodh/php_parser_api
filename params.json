{"name":"Php Parser API","body":"PHP Parser API\r\n==============\r\n\r\nThis project provides an API for the PHPParser[1] written by [nikic][2].\r\nIt's implemented as a TYPO3 extension but can be easily used as a stand-alone library.\r\nThe PHP Parser is included as sub module. Actually it's a fork of the Parser of nikic, since we needed more support for whitespaces and single line comments.\r\n\r\nDocumentation can be found in the [1] directory.\r\n\r\n***Note: This is still in alpha state, so the API is subject to change.***\r\n\r\nWhat is this for?\r\n-----------------\r\n\r\nThis library provides an API to parse, \"understand\", manipulate and rewrite PHP classes, functions, methods etc.\r\n\r\nFor example:\r\n```php\r\n<?php\r\n$phpFileObject = $ParserService->parseFile('path/To/File.php');\r\n$classObjects = $phpFileObject->getClasses();\r\n\r\nforeach($classObjects as $classObject) {\r\n\tif($classObject->hasMethod('foo')) {\r\n\t\t$classObject->getMethod('foo')->setName('bar');\r\n\t}\r\n}\r\n\r\n$PHPCode = $PrinterService->renderFileObject($phpFileObject);\r\n```\r\n\r\nIt can also create classes or merge methods from various classes into one etc.\r\n\r\n```php\r\n<?php\r\n\r\n$newClass = new Tx_PhpParser_Domain_Model_Class('MyNewClassName');\r\n$newClass->setDescription(\"This is a class created\\nfrom scratch\")\r\n\t->setTag('author','John Doe')\r\n\t->setMethod($existingClass->getMethod('getFoo'))\r\n\t->setMethod($existingClass->getMethod('setFoo'));\r\n\r\n$newProperty2 = new Tx_PhpParser_Domain_Model_Class_Property('foo');\r\n$newProperty2->setDescription('foo')\r\n\t->setValue(array('foo'=>123))\r\n\t->setTag('var', 'array $foo')\r\n\t->setModifier('private');\r\n\r\n$PHPCode = PrinterService->renderClassObject($newClass);\r\n```\r\n\r\nWhat else can it do?\r\n--------------------\r\nThe library is extendable with your own class factories or Node-Visitors.\r\nCurrently the printer tries to render TYPO3 CGL compliant code.\r\nThe library also provides methods to add, remove or change annotations in the doc comments.\r\nFor example it adds @param tags in methods (if they are missing) according to the parameter type hints.\r\n\r\nHave a look at the Unit and Function tests in the [Tests][3] directory to see some examples or read the documentation[4]\r\n\r\n\r\n\r\n\r\n [1]: https://github.com/nikic/PHP-Parser/\r\n [2]: https://github.com/nikic\r\n [3]: https://github.com/nicodh/php_parser_api/Tests/\r\n [4]: https://github.com/nicodh/php_parser_api/doc/1_Inspect_Objects.markdown","tagline":"API for the php-parser","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}